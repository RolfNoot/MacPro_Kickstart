ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPIS_HOST.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SPIS_HOST_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	SPIS_HOST_Enable
  22              		.code	16
  23              		.thumb_func
  24              		.type	SPIS_HOST_Enable, %function
  25              	SPIS_HOST_Enable:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\SPIS_HOST.c"
   1:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/SPIS_HOST.c **** * File Name: SPIS_HOST.c
   3:Generated_Source\PSoC4/SPIS_HOST.c **** * Version 2.70
   4:Generated_Source\PSoC4/SPIS_HOST.c **** *
   5:Generated_Source\PSoC4/SPIS_HOST.c **** * Description:
   6:Generated_Source\PSoC4/SPIS_HOST.c **** *  This file provides all API functionality of the SPI Slave component.
   7:Generated_Source\PSoC4/SPIS_HOST.c **** *
   8:Generated_Source\PSoC4/SPIS_HOST.c **** * Note:
   9:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
  10:Generated_Source\PSoC4/SPIS_HOST.c **** *
  11:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
  12:Generated_Source\PSoC4/SPIS_HOST.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/SPIS_HOST.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/SPIS_HOST.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/SPIS_HOST.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/SPIS_HOST.c **** 
  18:Generated_Source\PSoC4/SPIS_HOST.c **** #include "SPIS_HOST_PVT.h"
  19:Generated_Source\PSoC4/SPIS_HOST.c **** 
  20:Generated_Source\PSoC4/SPIS_HOST.c **** #if (SPIS_HOST_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC4/SPIS_HOST.c **** 
  22:Generated_Source\PSoC4/SPIS_HOST.c ****     volatile uint8 SPIS_HOST_txBuffer[SPIS_HOST_TX_BUFFER_SIZE];
  23:Generated_Source\PSoC4/SPIS_HOST.c ****     volatile uint8 SPIS_HOST_txBufferRead;
  24:Generated_Source\PSoC4/SPIS_HOST.c ****     volatile uint8 SPIS_HOST_txBufferWrite;
  25:Generated_Source\PSoC4/SPIS_HOST.c ****     volatile uint8 SPIS_HOST_txBufferFull;
  26:Generated_Source\PSoC4/SPIS_HOST.c **** 
  27:Generated_Source\PSoC4/SPIS_HOST.c **** #endif /* SPIS_HOST_TX_SOFTWARE_BUF_ENABLED*/
  28:Generated_Source\PSoC4/SPIS_HOST.c **** 
  29:Generated_Source\PSoC4/SPIS_HOST.c **** #if (SPIS_HOST_RX_SOFTWARE_BUF_ENABLED)
  30:Generated_Source\PSoC4/SPIS_HOST.c **** 
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 2


  31:Generated_Source\PSoC4/SPIS_HOST.c ****     volatile uint8 SPIS_HOST_rxBuffer[SPIS_HOST_RX_BUFFER_SIZE];
  32:Generated_Source\PSoC4/SPIS_HOST.c ****     volatile uint8 SPIS_HOST_rxBufferRead;
  33:Generated_Source\PSoC4/SPIS_HOST.c ****     volatile uint8 SPIS_HOST_rxBufferWrite;
  34:Generated_Source\PSoC4/SPIS_HOST.c ****     volatile uint8 SPIS_HOST_rxBufferFull;
  35:Generated_Source\PSoC4/SPIS_HOST.c **** 
  36:Generated_Source\PSoC4/SPIS_HOST.c **** #endif /* SPIS_HOST_RX_SOFTWARE_BUF_ENABLED */
  37:Generated_Source\PSoC4/SPIS_HOST.c **** 
  38:Generated_Source\PSoC4/SPIS_HOST.c **** uint8 SPIS_HOST_initVar = 0u;
  39:Generated_Source\PSoC4/SPIS_HOST.c **** 
  40:Generated_Source\PSoC4/SPIS_HOST.c **** volatile uint8 SPIS_HOST_swStatusTx;
  41:Generated_Source\PSoC4/SPIS_HOST.c **** volatile uint8 SPIS_HOST_swStatusRx;
  42:Generated_Source\PSoC4/SPIS_HOST.c **** 
  43:Generated_Source\PSoC4/SPIS_HOST.c **** 
  44:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
  45:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_Init
  46:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
  47:Generated_Source\PSoC4/SPIS_HOST.c **** *
  48:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
  49:Generated_Source\PSoC4/SPIS_HOST.c **** *  Inits/Restores default SPIS configuration provided with customizer.
  50:Generated_Source\PSoC4/SPIS_HOST.c **** *
  51:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
  52:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
  53:Generated_Source\PSoC4/SPIS_HOST.c **** *
  54:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
  55:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
  56:Generated_Source\PSoC4/SPIS_HOST.c **** *
  57:Generated_Source\PSoC4/SPIS_HOST.c **** * Side Effects:
  58:Generated_Source\PSoC4/SPIS_HOST.c **** *  When this function is called it initializes all of the necessary parameters
  59:Generated_Source\PSoC4/SPIS_HOST.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  60:Generated_Source\PSoC4/SPIS_HOST.c **** *  interrupt service routine, configuring the bit-counter parameters and
  61:Generated_Source\PSoC4/SPIS_HOST.c **** *  clearing the FIFO and Status Register.
  62:Generated_Source\PSoC4/SPIS_HOST.c **** *
  63:Generated_Source\PSoC4/SPIS_HOST.c **** * Reentrant:
  64:Generated_Source\PSoC4/SPIS_HOST.c **** *  No.
  65:Generated_Source\PSoC4/SPIS_HOST.c **** *
  66:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
  67:Generated_Source\PSoC4/SPIS_HOST.c **** void SPIS_HOST_Init(void) 
  68:Generated_Source\PSoC4/SPIS_HOST.c **** {
  69:Generated_Source\PSoC4/SPIS_HOST.c ****     /*Initialize the Bit counter */
  70:Generated_Source\PSoC4/SPIS_HOST.c ****     SPIS_HOST_COUNTER_PERIOD_REG = SPIS_HOST_BITCTR_INIT;
  71:Generated_Source\PSoC4/SPIS_HOST.c **** 
  72:Generated_Source\PSoC4/SPIS_HOST.c ****     /* ISR initialization */
  73:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_INTERNAL_TX_INT_ENABLED)
  74:Generated_Source\PSoC4/SPIS_HOST.c **** 
  75:Generated_Source\PSoC4/SPIS_HOST.c ****         CyIntDisable(SPIS_HOST_TX_ISR_NUMBER);
  76:Generated_Source\PSoC4/SPIS_HOST.c **** 
  77:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Set the ISR to point to the SPIS_HOST_isr Interrupt. */
  78:Generated_Source\PSoC4/SPIS_HOST.c ****         (void)CyIntSetVector(SPIS_HOST_TX_ISR_NUMBER, &SPIS_HOST_TX_ISR);
  79:Generated_Source\PSoC4/SPIS_HOST.c **** 
  80:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Set the priority. */
  81:Generated_Source\PSoC4/SPIS_HOST.c ****         CyIntSetPriority(SPIS_HOST_TX_ISR_NUMBER, SPIS_HOST_TX_ISR_PRIORITY);
  82:Generated_Source\PSoC4/SPIS_HOST.c **** 
  83:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_INTERNAL_TX_INT_ENABLED */
  84:Generated_Source\PSoC4/SPIS_HOST.c **** 
  85:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_INTERNAL_RX_INT_ENABLED)
  86:Generated_Source\PSoC4/SPIS_HOST.c **** 
  87:Generated_Source\PSoC4/SPIS_HOST.c ****         CyIntDisable(SPIS_HOST_RX_ISR_NUMBER);
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 3


  88:Generated_Source\PSoC4/SPIS_HOST.c **** 
  89:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Set the ISR to point to the SPIS_HOST_isr Interrupt. */
  90:Generated_Source\PSoC4/SPIS_HOST.c ****         (void)CyIntSetVector(SPIS_HOST_RX_ISR_NUMBER, &SPIS_HOST_RX_ISR);
  91:Generated_Source\PSoC4/SPIS_HOST.c **** 
  92:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Set the priority. */
  93:Generated_Source\PSoC4/SPIS_HOST.c ****         CyIntSetPriority(SPIS_HOST_RX_ISR_NUMBER, SPIS_HOST_RX_ISR_PRIORITY);
  94:Generated_Source\PSoC4/SPIS_HOST.c **** 
  95:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_INTERNAL_RX_INT_ENABLED */
  96:Generated_Source\PSoC4/SPIS_HOST.c **** 
  97:Generated_Source\PSoC4/SPIS_HOST.c ****     /* Clear any stray data from the RX and TX FIFO */
  98:Generated_Source\PSoC4/SPIS_HOST.c ****     SPIS_HOST_ClearFIFO();
  99:Generated_Source\PSoC4/SPIS_HOST.c **** 
 100:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_RX_SOFTWARE_BUF_ENABLED)
 101:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_rxBufferFull = 0u;
 102:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_rxBufferRead = 0u;
 103:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_rxBufferWrite = 0u;
 104:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_RX_SOFTWARE_BUF_ENABLED */
 105:Generated_Source\PSoC4/SPIS_HOST.c **** 
 106:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_TX_SOFTWARE_BUF_ENABLED)
 107:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_txBufferFull = 0u;
 108:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_txBufferRead = 0u;
 109:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_txBufferWrite = 0u;
 110:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_TX_SOFTWARE_BUF_ENABLED */
 111:Generated_Source\PSoC4/SPIS_HOST.c **** 
 112:Generated_Source\PSoC4/SPIS_HOST.c ****     (void) SPIS_HOST_ReadTxStatus(); /* Clear any pending status bits */
 113:Generated_Source\PSoC4/SPIS_HOST.c ****     (void) SPIS_HOST_ReadRxStatus(); /* Clear any pending status bits */
 114:Generated_Source\PSoC4/SPIS_HOST.c **** 
 115:Generated_Source\PSoC4/SPIS_HOST.c **** 
 116:Generated_Source\PSoC4/SPIS_HOST.c ****     /* Configure the Initial interrupt mask */
 117:Generated_Source\PSoC4/SPIS_HOST.c ****     #if (SPIS_HOST_TX_SOFTWARE_BUF_ENABLED)
 118:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_TX_STATUS_MASK_REG  = (SPIS_HOST_TX_INIT_INTERRUPTS_MASK &
 119:Generated_Source\PSoC4/SPIS_HOST.c ****                                                 (uint8)~SPIS_HOST_STS_TX_FIFO_NOT_FULL);
 120:Generated_Source\PSoC4/SPIS_HOST.c ****     #else /* SPIS_HOST_TX_SOFTWARE_BUF_ENABLED */
 121:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_TX_STATUS_MASK_REG  = SPIS_HOST_TX_INIT_INTERRUPTS_MASK;
 122:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_TX_SOFTWARE_BUF_ENABLED */
 123:Generated_Source\PSoC4/SPIS_HOST.c **** 
 124:Generated_Source\PSoC4/SPIS_HOST.c ****     SPIS_HOST_RX_STATUS_MASK_REG  = SPIS_HOST_RX_INIT_INTERRUPTS_MASK;
 125:Generated_Source\PSoC4/SPIS_HOST.c **** }
 126:Generated_Source\PSoC4/SPIS_HOST.c **** 
 127:Generated_Source\PSoC4/SPIS_HOST.c **** 
 128:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
 129:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_Enable
 130:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
 131:Generated_Source\PSoC4/SPIS_HOST.c **** *
 132:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
 133:Generated_Source\PSoC4/SPIS_HOST.c **** *  Enable SPIS component.
 134:Generated_Source\PSoC4/SPIS_HOST.c **** *
 135:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
 136:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 137:Generated_Source\PSoC4/SPIS_HOST.c **** *
 138:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
 139:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 140:Generated_Source\PSoC4/SPIS_HOST.c **** *
 141:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
 142:Generated_Source\PSoC4/SPIS_HOST.c **** void SPIS_HOST_Enable(void) 
 143:Generated_Source\PSoC4/SPIS_HOST.c **** {
  28              		.loc 1 143 0
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 4


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 144:Generated_Source\PSoC4/SPIS_HOST.c ****     uint8 enableInterrupts;
 145:Generated_Source\PSoC4/SPIS_HOST.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 145 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
 146:Generated_Source\PSoC4/SPIS_HOST.c **** 
 147:Generated_Source\PSoC4/SPIS_HOST.c ****     SPIS_HOST_COUNTER_CONTROL_REG |= SPIS_HOST_CNTR_ENABLE;
  39              		.loc 1 147 0
  40 0006 0A4A     		ldr	r2, .L2
  41 0008 1178     		ldrb	r1, [r2]
  42 000a 2023     		movs	r3, #32
  43 000c 0B43     		orrs	r3, r1
  44 000e DBB2     		uxtb	r3, r3
  45 0010 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC4/SPIS_HOST.c ****     SPIS_HOST_TX_STATUS_ACTL_REG |= SPIS_HOST_INT_ENABLE;
  46              		.loc 1 148 0
  47 0012 0849     		ldr	r1, .L2+4
  48 0014 0A78     		ldrb	r2, [r1]
  49 0016 1023     		movs	r3, #16
  50 0018 1A43     		orrs	r2, r3
  51 001a D2B2     		uxtb	r2, r2
  52 001c 0A70     		strb	r2, [r1]
 149:Generated_Source\PSoC4/SPIS_HOST.c ****     SPIS_HOST_RX_STATUS_ACTL_REG |= SPIS_HOST_INT_ENABLE;
  53              		.loc 1 149 0
  54 001e 064A     		ldr	r2, .L2+8
  55 0020 1178     		ldrb	r1, [r2]
  56 0022 0B43     		orrs	r3, r1
  57 0024 DBB2     		uxtb	r3, r3
  58 0026 1370     		strb	r3, [r2]
 150:Generated_Source\PSoC4/SPIS_HOST.c **** 
 151:Generated_Source\PSoC4/SPIS_HOST.c ****     CyExitCriticalSection(enableInterrupts);
  59              		.loc 1 151 0
  60 0028 FFF7FEFF 		bl	CyExitCriticalSection
  61              	.LVL1:
 152:Generated_Source\PSoC4/SPIS_HOST.c **** 
 153:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_INTERNAL_TX_INT_ENABLED)
 154:Generated_Source\PSoC4/SPIS_HOST.c ****         CyIntEnable(SPIS_HOST_TX_ISR_NUMBER);
 155:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_INTERNAL_TX_INT_ENABLED */
 156:Generated_Source\PSoC4/SPIS_HOST.c **** 
 157:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_INTERNAL_RX_INT_ENABLED)
 158:Generated_Source\PSoC4/SPIS_HOST.c ****         CyIntEnable(SPIS_HOST_RX_ISR_NUMBER);
 159:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_INTERNAL_RX_INT_ENABLED */
 160:Generated_Source\PSoC4/SPIS_HOST.c **** }
  62              		.loc 1 160 0
  63              		@ sp needed
  64 002c 10BD     		pop	{r4, pc}
  65              	.L3:
  66 002e C046     		.align	2
  67              	.L2:
  68 0030 94000F40 		.word	1074725012
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 5


  69 0034 91000F40 		.word	1074725009
  70 0038 90000F40 		.word	1074725008
  71              		.cfi_endproc
  72              	.LFE2:
  73              		.size	SPIS_HOST_Enable, .-SPIS_HOST_Enable
  74              		.section	.text.SPIS_HOST_Stop,"ax",%progbits
  75              		.align	2
  76              		.global	SPIS_HOST_Stop
  77              		.code	16
  78              		.thumb_func
  79              		.type	SPIS_HOST_Stop, %function
  80              	SPIS_HOST_Stop:
  81              	.LFB4:
 161:Generated_Source\PSoC4/SPIS_HOST.c **** 
 162:Generated_Source\PSoC4/SPIS_HOST.c **** 
 163:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_Start
 165:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
 166:Generated_Source\PSoC4/SPIS_HOST.c **** *
 167:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
 168:Generated_Source\PSoC4/SPIS_HOST.c **** *  Initialize and Enable the SPI Slave component.
 169:Generated_Source\PSoC4/SPIS_HOST.c **** *
 170:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
 171:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 172:Generated_Source\PSoC4/SPIS_HOST.c **** *
 173:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
 174:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 175:Generated_Source\PSoC4/SPIS_HOST.c **** *
 176:Generated_Source\PSoC4/SPIS_HOST.c **** * Global variables:
 177:Generated_Source\PSoC4/SPIS_HOST.c **** *  SPIS_HOST_initVar - used to check initial configuration, modified on
 178:Generated_Source\PSoC4/SPIS_HOST.c **** *  first function call.
 179:Generated_Source\PSoC4/SPIS_HOST.c **** *
 180:Generated_Source\PSoC4/SPIS_HOST.c **** * Theory:
 181:Generated_Source\PSoC4/SPIS_HOST.c **** *  Enable the clock input to enable operation.
 182:Generated_Source\PSoC4/SPIS_HOST.c **** *
 183:Generated_Source\PSoC4/SPIS_HOST.c **** * Reentrant:
 184:Generated_Source\PSoC4/SPIS_HOST.c **** *  No.
 185:Generated_Source\PSoC4/SPIS_HOST.c **** *
 186:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
 187:Generated_Source\PSoC4/SPIS_HOST.c **** void SPIS_HOST_Start(void) 
 188:Generated_Source\PSoC4/SPIS_HOST.c **** {
 189:Generated_Source\PSoC4/SPIS_HOST.c ****     if(SPIS_HOST_initVar == 0u)
 190:Generated_Source\PSoC4/SPIS_HOST.c ****     {
 191:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_Init();
 192:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_initVar = 1u;
 193:Generated_Source\PSoC4/SPIS_HOST.c ****     }
 194:Generated_Source\PSoC4/SPIS_HOST.c **** 
 195:Generated_Source\PSoC4/SPIS_HOST.c ****     SPIS_HOST_Enable();
 196:Generated_Source\PSoC4/SPIS_HOST.c **** }
 197:Generated_Source\PSoC4/SPIS_HOST.c **** 
 198:Generated_Source\PSoC4/SPIS_HOST.c **** 
 199:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
 200:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_Stop
 201:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
 202:Generated_Source\PSoC4/SPIS_HOST.c **** *
 203:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
 204:Generated_Source\PSoC4/SPIS_HOST.c **** *  Disable the SPI Slave component.
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 6


 205:Generated_Source\PSoC4/SPIS_HOST.c **** *
 206:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
 207:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 208:Generated_Source\PSoC4/SPIS_HOST.c **** *
 209:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
 210:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 211:Generated_Source\PSoC4/SPIS_HOST.c **** *
 212:Generated_Source\PSoC4/SPIS_HOST.c **** * Theory:
 213:Generated_Source\PSoC4/SPIS_HOST.c **** *  Disable the internal interrupt if one is used.
 214:Generated_Source\PSoC4/SPIS_HOST.c **** *
 215:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
 216:Generated_Source\PSoC4/SPIS_HOST.c **** void SPIS_HOST_Stop(void) 
 217:Generated_Source\PSoC4/SPIS_HOST.c **** {
  82              		.loc 1 217 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86 0000 10B5     		push	{r4, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 4, -8
  89              		.cfi_offset 14, -4
 218:Generated_Source\PSoC4/SPIS_HOST.c ****     uint8 enableInterrupts;
 219:Generated_Source\PSoC4/SPIS_HOST.c ****     enableInterrupts = CyEnterCriticalSection();
  90              		.loc 1 219 0
  91 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  92              	.LVL2:
 220:Generated_Source\PSoC4/SPIS_HOST.c **** 
 221:Generated_Source\PSoC4/SPIS_HOST.c ****     SPIS_HOST_TX_STATUS_ACTL_REG &= (uint8)~SPIS_HOST_INT_ENABLE;
  93              		.loc 1 221 0
  94 0006 064A     		ldr	r2, .L5
  95 0008 1378     		ldrb	r3, [r2]
  96 000a 1021     		movs	r1, #16
  97 000c 8B43     		bics	r3, r1
  98 000e 1370     		strb	r3, [r2]
 222:Generated_Source\PSoC4/SPIS_HOST.c ****     SPIS_HOST_RX_STATUS_ACTL_REG &= (uint8)~SPIS_HOST_INT_ENABLE;
  99              		.loc 1 222 0
 100 0010 044A     		ldr	r2, .L5+4
 101 0012 1378     		ldrb	r3, [r2]
 102 0014 8B43     		bics	r3, r1
 103 0016 1370     		strb	r3, [r2]
 223:Generated_Source\PSoC4/SPIS_HOST.c **** 
 224:Generated_Source\PSoC4/SPIS_HOST.c ****     CyExitCriticalSection(enableInterrupts);
 104              		.loc 1 224 0
 105 0018 FFF7FEFF 		bl	CyExitCriticalSection
 106              	.LVL3:
 225:Generated_Source\PSoC4/SPIS_HOST.c **** 
 226:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_INTERNAL_TX_INT_ENABLED)
 227:Generated_Source\PSoC4/SPIS_HOST.c ****         CyIntDisable(SPIS_HOST_TX_ISR_NUMBER);
 228:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_INTERNAL_TX_INT_ENABLED */
 229:Generated_Source\PSoC4/SPIS_HOST.c **** 
 230:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_INTERNAL_RX_INT_ENABLED)
 231:Generated_Source\PSoC4/SPIS_HOST.c ****         CyIntDisable(SPIS_HOST_RX_ISR_NUMBER);
 232:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_INTERNAL_RX_INT_ENABLED */
 233:Generated_Source\PSoC4/SPIS_HOST.c **** }
 107              		.loc 1 233 0
 108              		@ sp needed
 109 001c 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 7


 110              	.L6:
 111 001e C046     		.align	2
 112              	.L5:
 113 0020 91000F40 		.word	1074725009
 114 0024 90000F40 		.word	1074725008
 115              		.cfi_endproc
 116              	.LFE4:
 117              		.size	SPIS_HOST_Stop, .-SPIS_HOST_Stop
 118              		.section	.text.SPIS_HOST_EnableTxInt,"ax",%progbits
 119              		.align	2
 120              		.global	SPIS_HOST_EnableTxInt
 121              		.code	16
 122              		.thumb_func
 123              		.type	SPIS_HOST_EnableTxInt, %function
 124              	SPIS_HOST_EnableTxInt:
 125              	.LFB5:
 234:Generated_Source\PSoC4/SPIS_HOST.c **** 
 235:Generated_Source\PSoC4/SPIS_HOST.c **** 
 236:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
 237:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_EnableTxInt
 238:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
 239:Generated_Source\PSoC4/SPIS_HOST.c **** *
 240:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
 241:Generated_Source\PSoC4/SPIS_HOST.c **** *  Enable internal Tx interrupt generation.
 242:Generated_Source\PSoC4/SPIS_HOST.c **** *
 243:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
 244:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 245:Generated_Source\PSoC4/SPIS_HOST.c **** *
 246:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
 247:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 248:Generated_Source\PSoC4/SPIS_HOST.c **** *
 249:Generated_Source\PSoC4/SPIS_HOST.c **** * Theory:
 250:Generated_Source\PSoC4/SPIS_HOST.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 251:Generated_Source\PSoC4/SPIS_HOST.c **** *
 252:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
 253:Generated_Source\PSoC4/SPIS_HOST.c **** void SPIS_HOST_EnableTxInt(void) 
 254:Generated_Source\PSoC4/SPIS_HOST.c **** {
 126              		.loc 1 254 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 255:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_INTERNAL_TX_INT_ENABLED)
 256:Generated_Source\PSoC4/SPIS_HOST.c ****         CyIntEnable(SPIS_HOST_TX_ISR_NUMBER);
 257:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_INTERNAL_TX_INT_ENABLED */
 258:Generated_Source\PSoC4/SPIS_HOST.c **** }
 131              		.loc 1 258 0
 132              		@ sp needed
 133 0000 7047     		bx	lr
 134              		.cfi_endproc
 135              	.LFE5:
 136              		.size	SPIS_HOST_EnableTxInt, .-SPIS_HOST_EnableTxInt
 137 0002 C046     		.section	.text.SPIS_HOST_EnableRxInt,"ax",%progbits
 138              		.align	2
 139              		.global	SPIS_HOST_EnableRxInt
 140              		.code	16
 141              		.thumb_func
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 8


 142              		.type	SPIS_HOST_EnableRxInt, %function
 143              	SPIS_HOST_EnableRxInt:
 144              	.LFB6:
 259:Generated_Source\PSoC4/SPIS_HOST.c **** 
 260:Generated_Source\PSoC4/SPIS_HOST.c **** 
 261:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
 262:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_EnableRxInt
 263:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
 264:Generated_Source\PSoC4/SPIS_HOST.c **** *
 265:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
 266:Generated_Source\PSoC4/SPIS_HOST.c **** *  Enable internal Rx interrupt generation.
 267:Generated_Source\PSoC4/SPIS_HOST.c **** *
 268:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
 269:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 270:Generated_Source\PSoC4/SPIS_HOST.c **** *
 271:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
 272:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 273:Generated_Source\PSoC4/SPIS_HOST.c **** *
 274:Generated_Source\PSoC4/SPIS_HOST.c **** * Theory:
 275:Generated_Source\PSoC4/SPIS_HOST.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 276:Generated_Source\PSoC4/SPIS_HOST.c **** *
 277:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
 278:Generated_Source\PSoC4/SPIS_HOST.c **** void SPIS_HOST_EnableRxInt(void) 
 279:Generated_Source\PSoC4/SPIS_HOST.c **** {
 145              		.loc 1 279 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 280:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_INTERNAL_RX_INT_ENABLED)
 281:Generated_Source\PSoC4/SPIS_HOST.c ****         CyIntEnable(SPIS_HOST_RX_ISR_NUMBER);
 282:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_INTERNAL_RX_INT_ENABLED */
 283:Generated_Source\PSoC4/SPIS_HOST.c **** }
 150              		.loc 1 283 0
 151              		@ sp needed
 152 0000 7047     		bx	lr
 153              		.cfi_endproc
 154              	.LFE6:
 155              		.size	SPIS_HOST_EnableRxInt, .-SPIS_HOST_EnableRxInt
 156 0002 C046     		.section	.text.SPIS_HOST_DisableTxInt,"ax",%progbits
 157              		.align	2
 158              		.global	SPIS_HOST_DisableTxInt
 159              		.code	16
 160              		.thumb_func
 161              		.type	SPIS_HOST_DisableTxInt, %function
 162              	SPIS_HOST_DisableTxInt:
 163              	.LFB7:
 284:Generated_Source\PSoC4/SPIS_HOST.c **** 
 285:Generated_Source\PSoC4/SPIS_HOST.c **** 
 286:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
 287:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_DisableTxInt
 288:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
 289:Generated_Source\PSoC4/SPIS_HOST.c **** *
 290:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
 291:Generated_Source\PSoC4/SPIS_HOST.c **** *  Disable internal Tx interrupt generation.
 292:Generated_Source\PSoC4/SPIS_HOST.c **** *
 293:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 9


 294:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 295:Generated_Source\PSoC4/SPIS_HOST.c **** *
 296:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
 297:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 298:Generated_Source\PSoC4/SPIS_HOST.c **** *
 299:Generated_Source\PSoC4/SPIS_HOST.c **** * Theory:
 300:Generated_Source\PSoC4/SPIS_HOST.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 301:Generated_Source\PSoC4/SPIS_HOST.c **** *
 302:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
 303:Generated_Source\PSoC4/SPIS_HOST.c **** void SPIS_HOST_DisableTxInt(void) 
 304:Generated_Source\PSoC4/SPIS_HOST.c **** {
 164              		.loc 1 304 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168              		@ link register save eliminated.
 305:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_INTERNAL_TX_INT_ENABLED)
 306:Generated_Source\PSoC4/SPIS_HOST.c ****         CyIntDisable(SPIS_HOST_TX_ISR_NUMBER);
 307:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_INTERNAL_TX_INT_ENABLED */
 308:Generated_Source\PSoC4/SPIS_HOST.c **** }
 169              		.loc 1 308 0
 170              		@ sp needed
 171 0000 7047     		bx	lr
 172              		.cfi_endproc
 173              	.LFE7:
 174              		.size	SPIS_HOST_DisableTxInt, .-SPIS_HOST_DisableTxInt
 175 0002 C046     		.section	.text.SPIS_HOST_DisableRxInt,"ax",%progbits
 176              		.align	2
 177              		.global	SPIS_HOST_DisableRxInt
 178              		.code	16
 179              		.thumb_func
 180              		.type	SPIS_HOST_DisableRxInt, %function
 181              	SPIS_HOST_DisableRxInt:
 182              	.LFB8:
 309:Generated_Source\PSoC4/SPIS_HOST.c **** 
 310:Generated_Source\PSoC4/SPIS_HOST.c **** 
 311:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
 312:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_DisableRxInt
 313:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
 314:Generated_Source\PSoC4/SPIS_HOST.c **** *
 315:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
 316:Generated_Source\PSoC4/SPIS_HOST.c **** *  Disable internal Rx interrupt generation.
 317:Generated_Source\PSoC4/SPIS_HOST.c **** *
 318:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
 319:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 320:Generated_Source\PSoC4/SPIS_HOST.c **** *
 321:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
 322:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 323:Generated_Source\PSoC4/SPIS_HOST.c **** *
 324:Generated_Source\PSoC4/SPIS_HOST.c **** * Theory:
 325:Generated_Source\PSoC4/SPIS_HOST.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 326:Generated_Source\PSoC4/SPIS_HOST.c **** *
 327:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
 328:Generated_Source\PSoC4/SPIS_HOST.c **** void SPIS_HOST_DisableRxInt(void) 
 329:Generated_Source\PSoC4/SPIS_HOST.c **** {
 183              		.loc 1 329 0
 184              		.cfi_startproc
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 10


 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 330:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_INTERNAL_RX_INT_ENABLED)
 331:Generated_Source\PSoC4/SPIS_HOST.c ****         CyIntDisable(SPIS_HOST_RX_ISR_NUMBER);
 332:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_INTERNAL_RX_INT_ENABLED */
 333:Generated_Source\PSoC4/SPIS_HOST.c **** }
 188              		.loc 1 333 0
 189              		@ sp needed
 190 0000 7047     		bx	lr
 191              		.cfi_endproc
 192              	.LFE8:
 193              		.size	SPIS_HOST_DisableRxInt, .-SPIS_HOST_DisableRxInt
 194 0002 C046     		.section	.text.SPIS_HOST_SetTxInterruptMode,"ax",%progbits
 195              		.align	2
 196              		.global	SPIS_HOST_SetTxInterruptMode
 197              		.code	16
 198              		.thumb_func
 199              		.type	SPIS_HOST_SetTxInterruptMode, %function
 200              	SPIS_HOST_SetTxInterruptMode:
 201              	.LFB9:
 334:Generated_Source\PSoC4/SPIS_HOST.c **** 
 335:Generated_Source\PSoC4/SPIS_HOST.c **** 
 336:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
 337:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_SetTxInterruptMode
 338:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
 339:Generated_Source\PSoC4/SPIS_HOST.c **** *
 340:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
 341:Generated_Source\PSoC4/SPIS_HOST.c **** *  Configure which status bits trigger an interrupt event.
 342:Generated_Source\PSoC4/SPIS_HOST.c **** *
 343:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
 344:Generated_Source\PSoC4/SPIS_HOST.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 345:Generated_Source\PSoC4/SPIS_HOST.c **** *  header file).
 346:Generated_Source\PSoC4/SPIS_HOST.c **** *
 347:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
 348:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 349:Generated_Source\PSoC4/SPIS_HOST.c **** *
 350:Generated_Source\PSoC4/SPIS_HOST.c **** * Theory:
 351:Generated_Source\PSoC4/SPIS_HOST.c **** *  Enables the output of specific status bits to the interrupt controller.
 352:Generated_Source\PSoC4/SPIS_HOST.c **** *
 353:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
 354:Generated_Source\PSoC4/SPIS_HOST.c **** void SPIS_HOST_SetTxInterruptMode(uint8 intSrc) 
 355:Generated_Source\PSoC4/SPIS_HOST.c **** {
 202              		.loc 1 355 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 207              	.LVL4:
 356:Generated_Source\PSoC4/SPIS_HOST.c ****     SPIS_HOST_TX_STATUS_MASK_REG  = intSrc;
 208              		.loc 1 356 0
 209 0000 014B     		ldr	r3, .L12
 210 0002 1870     		strb	r0, [r3]
 357:Generated_Source\PSoC4/SPIS_HOST.c **** }
 211              		.loc 1 357 0
 212              		@ sp needed
 213 0004 7047     		bx	lr
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 11


 214              	.L13:
 215 0006 C046     		.align	2
 216              	.L12:
 217 0008 81000F40 		.word	1074724993
 218              		.cfi_endproc
 219              	.LFE9:
 220              		.size	SPIS_HOST_SetTxInterruptMode, .-SPIS_HOST_SetTxInterruptMode
 221              		.section	.text.SPIS_HOST_SetRxInterruptMode,"ax",%progbits
 222              		.align	2
 223              		.global	SPIS_HOST_SetRxInterruptMode
 224              		.code	16
 225              		.thumb_func
 226              		.type	SPIS_HOST_SetRxInterruptMode, %function
 227              	SPIS_HOST_SetRxInterruptMode:
 228              	.LFB10:
 358:Generated_Source\PSoC4/SPIS_HOST.c **** 
 359:Generated_Source\PSoC4/SPIS_HOST.c **** 
 360:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
 361:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_SetRxInterruptMode
 362:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
 363:Generated_Source\PSoC4/SPIS_HOST.c **** *
 364:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
 365:Generated_Source\PSoC4/SPIS_HOST.c **** *  Configure which status bits trigger an interrupt event.
 366:Generated_Source\PSoC4/SPIS_HOST.c **** *
 367:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
 368:Generated_Source\PSoC4/SPIS_HOST.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 369:Generated_Source\PSoC4/SPIS_HOST.c **** *  header file).
 370:Generated_Source\PSoC4/SPIS_HOST.c **** *
 371:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
 372:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 373:Generated_Source\PSoC4/SPIS_HOST.c **** *
 374:Generated_Source\PSoC4/SPIS_HOST.c **** * Theory:
 375:Generated_Source\PSoC4/SPIS_HOST.c **** *  Enables the output of specific status bits to the interrupt controller.
 376:Generated_Source\PSoC4/SPIS_HOST.c **** *
 377:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
 378:Generated_Source\PSoC4/SPIS_HOST.c **** void SPIS_HOST_SetRxInterruptMode(uint8 intSrc) 
 379:Generated_Source\PSoC4/SPIS_HOST.c **** {
 229              		.loc 1 379 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              	.LVL5:
 380:Generated_Source\PSoC4/SPIS_HOST.c ****     SPIS_HOST_RX_STATUS_MASK_REG  = intSrc;
 235              		.loc 1 380 0
 236 0000 014B     		ldr	r3, .L15
 237 0002 1870     		strb	r0, [r3]
 381:Generated_Source\PSoC4/SPIS_HOST.c **** }
 238              		.loc 1 381 0
 239              		@ sp needed
 240 0004 7047     		bx	lr
 241              	.L16:
 242 0006 C046     		.align	2
 243              	.L15:
 244 0008 80000F40 		.word	1074724992
 245              		.cfi_endproc
 246              	.LFE10:
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 12


 247              		.size	SPIS_HOST_SetRxInterruptMode, .-SPIS_HOST_SetRxInterruptMode
 248              		.section	.text.SPIS_HOST_ReadTxStatus,"ax",%progbits
 249              		.align	2
 250              		.global	SPIS_HOST_ReadTxStatus
 251              		.code	16
 252              		.thumb_func
 253              		.type	SPIS_HOST_ReadTxStatus, %function
 254              	SPIS_HOST_ReadTxStatus:
 255              	.LFB11:
 382:Generated_Source\PSoC4/SPIS_HOST.c **** 
 383:Generated_Source\PSoC4/SPIS_HOST.c **** 
 384:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
 385:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_ReadTxStatus
 386:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
 387:Generated_Source\PSoC4/SPIS_HOST.c **** *
 388:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
 389:Generated_Source\PSoC4/SPIS_HOST.c **** *  Read the Tx status register for the component.
 390:Generated_Source\PSoC4/SPIS_HOST.c **** *
 391:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
 392:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 393:Generated_Source\PSoC4/SPIS_HOST.c **** *
 394:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
 395:Generated_Source\PSoC4/SPIS_HOST.c **** *  Contents of the Tx status register.
 396:Generated_Source\PSoC4/SPIS_HOST.c **** *
 397:Generated_Source\PSoC4/SPIS_HOST.c **** * Global variables:
 398:Generated_Source\PSoC4/SPIS_HOST.c **** *  SPIS_HOST_swStatusTx - used to store in software status register,
 399:Generated_Source\PSoC4/SPIS_HOST.c **** *  modified every function call - resets to zero.
 400:Generated_Source\PSoC4/SPIS_HOST.c **** *
 401:Generated_Source\PSoC4/SPIS_HOST.c **** * Theory:
 402:Generated_Source\PSoC4/SPIS_HOST.c **** *  Allows the user and the API to read the Tx status register for error
 403:Generated_Source\PSoC4/SPIS_HOST.c **** *  detection and flow control.
 404:Generated_Source\PSoC4/SPIS_HOST.c **** *
 405:Generated_Source\PSoC4/SPIS_HOST.c **** * Side Effects:
 406:Generated_Source\PSoC4/SPIS_HOST.c **** *  Clear Tx status register of the component.
 407:Generated_Source\PSoC4/SPIS_HOST.c **** *
 408:Generated_Source\PSoC4/SPIS_HOST.c **** * Reentrant:
 409:Generated_Source\PSoC4/SPIS_HOST.c **** *  No.
 410:Generated_Source\PSoC4/SPIS_HOST.c **** *
 411:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
 412:Generated_Source\PSoC4/SPIS_HOST.c **** uint8 SPIS_HOST_ReadTxStatus(void) 
 413:Generated_Source\PSoC4/SPIS_HOST.c **** {
 256              		.loc 1 413 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 414:Generated_Source\PSoC4/SPIS_HOST.c ****     uint8 tmpStatus;
 415:Generated_Source\PSoC4/SPIS_HOST.c **** 
 416:Generated_Source\PSoC4/SPIS_HOST.c ****     #if (SPIS_HOST_TX_SOFTWARE_BUF_ENABLED)
 417:Generated_Source\PSoC4/SPIS_HOST.c **** 
 418:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_DisableTxInt();
 419:Generated_Source\PSoC4/SPIS_HOST.c **** 
 420:Generated_Source\PSoC4/SPIS_HOST.c ****         tmpStatus = SPIS_HOST_GET_STATUS_TX(SPIS_HOST_swStatusTx);
 421:Generated_Source\PSoC4/SPIS_HOST.c **** 
 422:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_swStatusTx = 0u;
 423:Generated_Source\PSoC4/SPIS_HOST.c **** 
 424:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Enable Interrupts */
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 13


 425:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_EnableTxInt();
 426:Generated_Source\PSoC4/SPIS_HOST.c **** 
 427:Generated_Source\PSoC4/SPIS_HOST.c ****     #else /* !SPIS_HOST_TX_SOFTWARE_BUF_ENABLED */
 428:Generated_Source\PSoC4/SPIS_HOST.c **** 
 429:Generated_Source\PSoC4/SPIS_HOST.c ****         tmpStatus = SPIS_HOST_TX_STATUS_REG;
 261              		.loc 1 429 0
 262 0000 014B     		ldr	r3, .L18
 263 0002 1878     		ldrb	r0, [r3]
 264 0004 C0B2     		uxtb	r0, r0
 265              	.LVL6:
 430:Generated_Source\PSoC4/SPIS_HOST.c **** 
 431:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_TX_SOFTWARE_BUF_ENABLED */
 432:Generated_Source\PSoC4/SPIS_HOST.c **** 
 433:Generated_Source\PSoC4/SPIS_HOST.c ****     return(tmpStatus);
 434:Generated_Source\PSoC4/SPIS_HOST.c **** }
 266              		.loc 1 434 0
 267              		@ sp needed
 268 0006 7047     		bx	lr
 269              	.L19:
 270              		.align	2
 271              	.L18:
 272 0008 61000F40 		.word	1074724961
 273              		.cfi_endproc
 274              	.LFE11:
 275              		.size	SPIS_HOST_ReadTxStatus, .-SPIS_HOST_ReadTxStatus
 276              		.section	.text.SPIS_HOST_ReadRxStatus,"ax",%progbits
 277              		.align	2
 278              		.global	SPIS_HOST_ReadRxStatus
 279              		.code	16
 280              		.thumb_func
 281              		.type	SPIS_HOST_ReadRxStatus, %function
 282              	SPIS_HOST_ReadRxStatus:
 283              	.LFB12:
 435:Generated_Source\PSoC4/SPIS_HOST.c **** 
 436:Generated_Source\PSoC4/SPIS_HOST.c **** 
 437:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
 438:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_ReadRxStatus
 439:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
 440:Generated_Source\PSoC4/SPIS_HOST.c **** *
 441:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
 442:Generated_Source\PSoC4/SPIS_HOST.c **** *  Read the Rx status register for the component.
 443:Generated_Source\PSoC4/SPIS_HOST.c **** *
 444:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
 445:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 446:Generated_Source\PSoC4/SPIS_HOST.c **** *
 447:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
 448:Generated_Source\PSoC4/SPIS_HOST.c **** *  Contents of the Rx status register.
 449:Generated_Source\PSoC4/SPIS_HOST.c **** *
 450:Generated_Source\PSoC4/SPIS_HOST.c **** * Global variables:
 451:Generated_Source\PSoC4/SPIS_HOST.c **** *  SPIS_HOST_swStatusRx - used to store in software Rx status register,
 452:Generated_Source\PSoC4/SPIS_HOST.c **** *  modified every function call - resets to zero.
 453:Generated_Source\PSoC4/SPIS_HOST.c **** *
 454:Generated_Source\PSoC4/SPIS_HOST.c **** * Theory:
 455:Generated_Source\PSoC4/SPIS_HOST.c **** *  Allows the user and the API to read the Rx status register for error
 456:Generated_Source\PSoC4/SPIS_HOST.c **** *  detection and flow control.
 457:Generated_Source\PSoC4/SPIS_HOST.c **** *
 458:Generated_Source\PSoC4/SPIS_HOST.c **** * Side Effects:
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 14


 459:Generated_Source\PSoC4/SPIS_HOST.c **** *  Clear Rx status register of the component.
 460:Generated_Source\PSoC4/SPIS_HOST.c **** *
 461:Generated_Source\PSoC4/SPIS_HOST.c **** * Reentrant:
 462:Generated_Source\PSoC4/SPIS_HOST.c **** *  No.
 463:Generated_Source\PSoC4/SPIS_HOST.c **** *
 464:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
 465:Generated_Source\PSoC4/SPIS_HOST.c **** uint8 SPIS_HOST_ReadRxStatus(void) 
 466:Generated_Source\PSoC4/SPIS_HOST.c **** {
 284              		.loc 1 466 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 467:Generated_Source\PSoC4/SPIS_HOST.c ****     uint8 tmpStatus;
 468:Generated_Source\PSoC4/SPIS_HOST.c **** 
 469:Generated_Source\PSoC4/SPIS_HOST.c ****     #if (SPIS_HOST_RX_SOFTWARE_BUF_ENABLED)
 470:Generated_Source\PSoC4/SPIS_HOST.c **** 
 471:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_DisableRxInt();
 472:Generated_Source\PSoC4/SPIS_HOST.c **** 
 473:Generated_Source\PSoC4/SPIS_HOST.c ****         tmpStatus = SPIS_HOST_GET_STATUS_RX(SPIS_HOST_swStatusRx);
 474:Generated_Source\PSoC4/SPIS_HOST.c **** 
 475:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_swStatusRx = 0u;
 476:Generated_Source\PSoC4/SPIS_HOST.c **** 
 477:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Enable Interrupts */
 478:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_EnableRxInt();
 479:Generated_Source\PSoC4/SPIS_HOST.c **** 
 480:Generated_Source\PSoC4/SPIS_HOST.c ****     #else /* !SPIS_HOST_RX_SOFTWARE_BUF_ENABLED */
 481:Generated_Source\PSoC4/SPIS_HOST.c **** 
 482:Generated_Source\PSoC4/SPIS_HOST.c ****         tmpStatus = SPIS_HOST_RX_STATUS_REG;
 289              		.loc 1 482 0
 290 0000 014B     		ldr	r3, .L21
 291 0002 1878     		ldrb	r0, [r3]
 292 0004 C0B2     		uxtb	r0, r0
 293              	.LVL7:
 483:Generated_Source\PSoC4/SPIS_HOST.c **** 
 484:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_RX_SOFTWARE_BUF_ENABLED */
 485:Generated_Source\PSoC4/SPIS_HOST.c **** 
 486:Generated_Source\PSoC4/SPIS_HOST.c ****     return(tmpStatus);
 487:Generated_Source\PSoC4/SPIS_HOST.c **** }
 294              		.loc 1 487 0
 295              		@ sp needed
 296 0006 7047     		bx	lr
 297              	.L22:
 298              		.align	2
 299              	.L21:
 300 0008 60000F40 		.word	1074724960
 301              		.cfi_endproc
 302              	.LFE12:
 303              		.size	SPIS_HOST_ReadRxStatus, .-SPIS_HOST_ReadRxStatus
 304              		.section	.text.SPIS_HOST_WriteTxData,"ax",%progbits
 305              		.align	2
 306              		.global	SPIS_HOST_WriteTxData
 307              		.code	16
 308              		.thumb_func
 309              		.type	SPIS_HOST_WriteTxData, %function
 310              	SPIS_HOST_WriteTxData:
 311              	.LFB13:
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 15


 488:Generated_Source\PSoC4/SPIS_HOST.c **** 
 489:Generated_Source\PSoC4/SPIS_HOST.c **** 
 490:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
 491:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_WriteTxData
 492:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
 493:Generated_Source\PSoC4/SPIS_HOST.c **** *
 494:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
 495:Generated_Source\PSoC4/SPIS_HOST.c **** *  Write a byte of data to be sent across the SPI.
 496:Generated_Source\PSoC4/SPIS_HOST.c **** *
 497:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
 498:Generated_Source\PSoC4/SPIS_HOST.c **** *  txDataByte: The data value to send across the SPI.
 499:Generated_Source\PSoC4/SPIS_HOST.c **** *
 500:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
 501:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 502:Generated_Source\PSoC4/SPIS_HOST.c **** *
 503:Generated_Source\PSoC4/SPIS_HOST.c **** * Global variables:
 504:Generated_Source\PSoC4/SPIS_HOST.c **** *  SPIS_HOST_txBufferWrite - used for the account of the bytes which
 505:Generated_Source\PSoC4/SPIS_HOST.c **** *  have been written down in the TX software buffer, modified every function
 506:Generated_Source\PSoC4/SPIS_HOST.c **** *  call if TX Software Buffer is used.
 507:Generated_Source\PSoC4/SPIS_HOST.c **** *  SPIS_HOST_txBufferRead - used for the account of the bytes which
 508:Generated_Source\PSoC4/SPIS_HOST.c **** *  have been read from the TX software buffer.
 509:Generated_Source\PSoC4/SPIS_HOST.c **** *  SPIS_HOST_txBuffer[SPIS_HOST_TX_BUFFER_SIZE] - used to store
 510:Generated_Source\PSoC4/SPIS_HOST.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 511:Generated_Source\PSoC4/SPIS_HOST.c **** *
 512:Generated_Source\PSoC4/SPIS_HOST.c **** * Theory:
 513:Generated_Source\PSoC4/SPIS_HOST.c **** *  Allows the user to transmit any byte of data in a single transfer.
 514:Generated_Source\PSoC4/SPIS_HOST.c **** *
 515:Generated_Source\PSoC4/SPIS_HOST.c **** * Side Effects:
 516:Generated_Source\PSoC4/SPIS_HOST.c **** *  If this function is called again before the previous byte is finished then
 517:Generated_Source\PSoC4/SPIS_HOST.c **** *  the next byte will be appended to the transfer with no time between
 518:Generated_Source\PSoC4/SPIS_HOST.c **** *  the byte transfers. Clear Tx status register of the component.
 519:Generated_Source\PSoC4/SPIS_HOST.c **** *
 520:Generated_Source\PSoC4/SPIS_HOST.c **** * Reentrant:
 521:Generated_Source\PSoC4/SPIS_HOST.c **** *  No.
 522:Generated_Source\PSoC4/SPIS_HOST.c **** *
 523:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
 524:Generated_Source\PSoC4/SPIS_HOST.c **** void SPIS_HOST_WriteTxData(uint8 txData) 
 525:Generated_Source\PSoC4/SPIS_HOST.c **** {
 312              		.loc 1 525 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317              	.LVL8:
 318              	.L24:
 526:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_TX_SOFTWARE_BUF_ENABLED)
 527:Generated_Source\PSoC4/SPIS_HOST.c **** 
 528:Generated_Source\PSoC4/SPIS_HOST.c ****         uint8 tempStatus;
 529:Generated_Source\PSoC4/SPIS_HOST.c ****         uint8 tmpTxBufferRead;
 530:Generated_Source\PSoC4/SPIS_HOST.c **** 
 531:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Block if buffer is full, so we don't overwrite. */
 532:Generated_Source\PSoC4/SPIS_HOST.c ****         do
 533:Generated_Source\PSoC4/SPIS_HOST.c ****         {
 534:Generated_Source\PSoC4/SPIS_HOST.c ****             tmpTxBufferRead = SPIS_HOST_txBufferRead;
 535:Generated_Source\PSoC4/SPIS_HOST.c ****             if (0u == tmpTxBufferRead)
 536:Generated_Source\PSoC4/SPIS_HOST.c ****             {
 537:Generated_Source\PSoC4/SPIS_HOST.c ****                 tmpTxBufferRead = SPIS_HOST_TX_BUFFER_SIZE - 1u;
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 16


 538:Generated_Source\PSoC4/SPIS_HOST.c ****             }
 539:Generated_Source\PSoC4/SPIS_HOST.c ****             else
 540:Generated_Source\PSoC4/SPIS_HOST.c ****             {
 541:Generated_Source\PSoC4/SPIS_HOST.c ****                 tmpTxBufferRead--;
 542:Generated_Source\PSoC4/SPIS_HOST.c ****             }
 543:Generated_Source\PSoC4/SPIS_HOST.c **** 
 544:Generated_Source\PSoC4/SPIS_HOST.c ****         }
 545:Generated_Source\PSoC4/SPIS_HOST.c ****         while(tmpTxBufferRead == SPIS_HOST_txBufferWrite);
 546:Generated_Source\PSoC4/SPIS_HOST.c **** 
 547:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 548:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_DisableTxInt();
 549:Generated_Source\PSoC4/SPIS_HOST.c **** 
 550:Generated_Source\PSoC4/SPIS_HOST.c ****         tempStatus = SPIS_HOST_GET_STATUS_TX(SPIS_HOST_swStatusTx);
 551:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_swStatusTx = tempStatus;
 552:Generated_Source\PSoC4/SPIS_HOST.c **** 
 553:Generated_Source\PSoC4/SPIS_HOST.c ****         if((SPIS_HOST_txBufferRead == SPIS_HOST_txBufferWrite) &&
 554:Generated_Source\PSoC4/SPIS_HOST.c ****             (0u != (SPIS_HOST_swStatusTx & SPIS_HOST_STS_TX_FIFO_NOT_FULL)))
 555:Generated_Source\PSoC4/SPIS_HOST.c ****         {
 556:Generated_Source\PSoC4/SPIS_HOST.c ****             /* Put data element into the TX FIFO */
 557:Generated_Source\PSoC4/SPIS_HOST.c ****             CY_SET_REG8(SPIS_HOST_TXDATA_PTR, txData);
 558:Generated_Source\PSoC4/SPIS_HOST.c ****         }
 559:Generated_Source\PSoC4/SPIS_HOST.c ****         else
 560:Generated_Source\PSoC4/SPIS_HOST.c ****         {
 561:Generated_Source\PSoC4/SPIS_HOST.c ****             /* Put data element into the software buffer */
 562:Generated_Source\PSoC4/SPIS_HOST.c ****             SPIS_HOST_txBufferWrite++;
 563:Generated_Source\PSoC4/SPIS_HOST.c ****             if(SPIS_HOST_txBufferWrite >= SPIS_HOST_TX_BUFFER_SIZE)
 564:Generated_Source\PSoC4/SPIS_HOST.c ****             {
 565:Generated_Source\PSoC4/SPIS_HOST.c ****                 SPIS_HOST_txBufferWrite = 0u;
 566:Generated_Source\PSoC4/SPIS_HOST.c ****             }
 567:Generated_Source\PSoC4/SPIS_HOST.c **** 
 568:Generated_Source\PSoC4/SPIS_HOST.c ****             if(SPIS_HOST_txBufferWrite == SPIS_HOST_txBufferRead)
 569:Generated_Source\PSoC4/SPIS_HOST.c ****             {
 570:Generated_Source\PSoC4/SPIS_HOST.c ****                 SPIS_HOST_txBufferRead++;
 571:Generated_Source\PSoC4/SPIS_HOST.c ****                 if(SPIS_HOST_txBufferRead >= SPIS_HOST_RX_BUFFER_SIZE)
 572:Generated_Source\PSoC4/SPIS_HOST.c ****                 {
 573:Generated_Source\PSoC4/SPIS_HOST.c ****                     SPIS_HOST_txBufferRead = 0u;
 574:Generated_Source\PSoC4/SPIS_HOST.c ****                 }
 575:Generated_Source\PSoC4/SPIS_HOST.c ****                 SPIS_HOST_txBufferFull = 1u;
 576:Generated_Source\PSoC4/SPIS_HOST.c ****             }
 577:Generated_Source\PSoC4/SPIS_HOST.c **** 
 578:Generated_Source\PSoC4/SPIS_HOST.c ****             SPIS_HOST_txBuffer[SPIS_HOST_txBufferWrite] = txData;
 579:Generated_Source\PSoC4/SPIS_HOST.c **** 
 580:Generated_Source\PSoC4/SPIS_HOST.c ****             SPIS_HOST_TX_STATUS_MASK_REG |= SPIS_HOST_STS_TX_FIFO_NOT_FULL;
 581:Generated_Source\PSoC4/SPIS_HOST.c ****         }
 582:Generated_Source\PSoC4/SPIS_HOST.c **** 
 583:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Enable Interrupt. */
 584:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_EnableTxInt();
 585:Generated_Source\PSoC4/SPIS_HOST.c **** 
 586:Generated_Source\PSoC4/SPIS_HOST.c ****     #else /* !SPIS_HOST_TX_SOFTWARE_BUF_ENABLED */
 587:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Wait until TX FIFO has a place */
 588:Generated_Source\PSoC4/SPIS_HOST.c ****         while(0u == (SPIS_HOST_TX_STATUS_REG & SPIS_HOST_STS_TX_FIFO_NOT_FULL))
 319              		.loc 1 588 0 discriminator 1
 320 0000 034B     		ldr	r3, .L25
 321 0002 1B78     		ldrb	r3, [r3]
 322 0004 9B07     		lsls	r3, r3, #30
 323 0006 FBD5     		bpl	.L24
 589:Generated_Source\PSoC4/SPIS_HOST.c ****         {
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 17


 590:Generated_Source\PSoC4/SPIS_HOST.c ****         }
 591:Generated_Source\PSoC4/SPIS_HOST.c **** 
 592:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Put data element into the TX FIFO */
 593:Generated_Source\PSoC4/SPIS_HOST.c ****         CY_SET_REG8(SPIS_HOST_TXDATA_PTR, txData);
 324              		.loc 1 593 0
 325 0008 024B     		ldr	r3, .L25+4
 326 000a 1870     		strb	r0, [r3]
 594:Generated_Source\PSoC4/SPIS_HOST.c ****         
 595:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_TX_SOFTWARE_BUF_ENABLED */
 596:Generated_Source\PSoC4/SPIS_HOST.c **** }
 327              		.loc 1 596 0
 328              		@ sp needed
 329 000c 7047     		bx	lr
 330              	.L26:
 331 000e C046     		.align	2
 332              	.L25:
 333 0010 61000F40 		.word	1074724961
 334 0014 40000F40 		.word	1074724928
 335              		.cfi_endproc
 336              	.LFE13:
 337              		.size	SPIS_HOST_WriteTxData, .-SPIS_HOST_WriteTxData
 338              		.section	.text.SPIS_HOST_WriteTxDataZero,"ax",%progbits
 339              		.align	2
 340              		.global	SPIS_HOST_WriteTxDataZero
 341              		.code	16
 342              		.thumb_func
 343              		.type	SPIS_HOST_WriteTxDataZero, %function
 344              	SPIS_HOST_WriteTxDataZero:
 345              	.LFB14:
 597:Generated_Source\PSoC4/SPIS_HOST.c **** 
 598:Generated_Source\PSoC4/SPIS_HOST.c **** #if(SPIS_HOST_MODE_USE_ZERO != 0u)
 599:Generated_Source\PSoC4/SPIS_HOST.c **** 
 600:Generated_Source\PSoC4/SPIS_HOST.c ****     /*******************************************************************************
 601:Generated_Source\PSoC4/SPIS_HOST.c ****     * Function Name: SPIS_HOST_WriteTxDataZero
 602:Generated_Source\PSoC4/SPIS_HOST.c ****     ********************************************************************************
 603:Generated_Source\PSoC4/SPIS_HOST.c ****     *
 604:Generated_Source\PSoC4/SPIS_HOST.c ****     * Summary:
 605:Generated_Source\PSoC4/SPIS_HOST.c ****     *  Write a byte zero of data to be sent across the SPI. This must be used in
 606:Generated_Source\PSoC4/SPIS_HOST.c ****     *  Mode 00 and 01 if the FIFO is empty and data is not being sent.
 607:Generated_Source\PSoC4/SPIS_HOST.c ****     *
 608:Generated_Source\PSoC4/SPIS_HOST.c ****     * Parameters:
 609:Generated_Source\PSoC4/SPIS_HOST.c ****     *  txDataByte: The data value to send across the SPI.
 610:Generated_Source\PSoC4/SPIS_HOST.c ****     *
 611:Generated_Source\PSoC4/SPIS_HOST.c ****     * Return:
 612:Generated_Source\PSoC4/SPIS_HOST.c ****     *  None.
 613:Generated_Source\PSoC4/SPIS_HOST.c ****     *
 614:Generated_Source\PSoC4/SPIS_HOST.c ****     * Theory:
 615:Generated_Source\PSoC4/SPIS_HOST.c ****     *  Allows the user to transmit any byte of data in a single transfer. Clear
 616:Generated_Source\PSoC4/SPIS_HOST.c ****     *  status register of the component.
 617:Generated_Source\PSoC4/SPIS_HOST.c ****     *
 618:Generated_Source\PSoC4/SPIS_HOST.c ****     *******************************************************************************/
 619:Generated_Source\PSoC4/SPIS_HOST.c ****     void SPIS_HOST_WriteTxDataZero(uint8 txDataByte)
 620:Generated_Source\PSoC4/SPIS_HOST.c ****                                         
 621:Generated_Source\PSoC4/SPIS_HOST.c ****     {
 346              		.loc 1 621 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 18


 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              		@ link register save eliminated.
 351              	.LVL9:
 622:Generated_Source\PSoC4/SPIS_HOST.c ****         CY_SET_REG8(SPIS_HOST_TXDATA_ZERO_PTR, txDataByte);
 352              		.loc 1 622 0
 353 0000 014B     		ldr	r3, .L28
 354 0002 1870     		strb	r0, [r3]
 623:Generated_Source\PSoC4/SPIS_HOST.c ****     }
 355              		.loc 1 623 0
 356              		@ sp needed
 357 0004 7047     		bx	lr
 358              	.L29:
 359 0006 C046     		.align	2
 360              	.L28:
 361 0008 00000F40 		.word	1074724864
 362              		.cfi_endproc
 363              	.LFE14:
 364              		.size	SPIS_HOST_WriteTxDataZero, .-SPIS_HOST_WriteTxDataZero
 365              		.section	.text.SPIS_HOST_ReadRxData,"ax",%progbits
 366              		.align	2
 367              		.global	SPIS_HOST_ReadRxData
 368              		.code	16
 369              		.thumb_func
 370              		.type	SPIS_HOST_ReadRxData, %function
 371              	SPIS_HOST_ReadRxData:
 372              	.LFB15:
 624:Generated_Source\PSoC4/SPIS_HOST.c **** 
 625:Generated_Source\PSoC4/SPIS_HOST.c **** #endif /* (SPIS_HOST_MODE_USE_ZERO != 0u) */
 626:Generated_Source\PSoC4/SPIS_HOST.c **** 
 627:Generated_Source\PSoC4/SPIS_HOST.c **** 
 628:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
 629:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_ReadRxData
 630:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
 631:Generated_Source\PSoC4/SPIS_HOST.c **** *
 632:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
 633:Generated_Source\PSoC4/SPIS_HOST.c **** *  Read the next byte of data received across the SPI.
 634:Generated_Source\PSoC4/SPIS_HOST.c **** *
 635:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
 636:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 637:Generated_Source\PSoC4/SPIS_HOST.c **** *
 638:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
 639:Generated_Source\PSoC4/SPIS_HOST.c **** *  The next byte of data read from the FIFO.
 640:Generated_Source\PSoC4/SPIS_HOST.c **** *
 641:Generated_Source\PSoC4/SPIS_HOST.c **** * Global variables:
 642:Generated_Source\PSoC4/SPIS_HOST.c **** *  SPIS_HOST_rxBufferWrite - used for the account of the bytes which
 643:Generated_Source\PSoC4/SPIS_HOST.c **** *  have been written down in the RX software buffer.
 644:Generated_Source\PSoC4/SPIS_HOST.c **** *  SPIS_HOST_rxBufferRead - used for the account of the bytes which
 645:Generated_Source\PSoC4/SPIS_HOST.c **** *  have been read from the RX software buffer, modified every function
 646:Generated_Source\PSoC4/SPIS_HOST.c **** *  call if RX Software Buffer is used.
 647:Generated_Source\PSoC4/SPIS_HOST.c **** *  SPIS_HOST_rxBuffer[SPIS_HOST_RX_BUFFER_SIZE] - used to store
 648:Generated_Source\PSoC4/SPIS_HOST.c **** *  received data.
 649:Generated_Source\PSoC4/SPIS_HOST.c **** *
 650:Generated_Source\PSoC4/SPIS_HOST.c **** * Theory:
 651:Generated_Source\PSoC4/SPIS_HOST.c **** *  Allows the user to read a byte of data received.
 652:Generated_Source\PSoC4/SPIS_HOST.c **** *
 653:Generated_Source\PSoC4/SPIS_HOST.c **** * Side Effects:
 654:Generated_Source\PSoC4/SPIS_HOST.c **** *  Will return invalid data if the FIFO is empty.  User should poll for FIFO
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 19


 655:Generated_Source\PSoC4/SPIS_HOST.c **** *  empty status before calling Read function.
 656:Generated_Source\PSoC4/SPIS_HOST.c **** *
 657:Generated_Source\PSoC4/SPIS_HOST.c **** * Reentrant:
 658:Generated_Source\PSoC4/SPIS_HOST.c **** *  No.
 659:Generated_Source\PSoC4/SPIS_HOST.c **** *
 660:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/SPIS_HOST.c **** uint8 SPIS_HOST_ReadRxData(void) 
 662:Generated_Source\PSoC4/SPIS_HOST.c **** {
 373              		.loc 1 662 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 663:Generated_Source\PSoC4/SPIS_HOST.c ****     uint8 rxData;
 664:Generated_Source\PSoC4/SPIS_HOST.c **** 
 665:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_RX_SOFTWARE_BUF_ENABLED)
 666:Generated_Source\PSoC4/SPIS_HOST.c **** 
 667:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 668:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_DisableRxInt();
 669:Generated_Source\PSoC4/SPIS_HOST.c **** 
 670:Generated_Source\PSoC4/SPIS_HOST.c ****         if(SPIS_HOST_rxBufferRead != SPIS_HOST_rxBufferWrite)
 671:Generated_Source\PSoC4/SPIS_HOST.c ****         {
 672:Generated_Source\PSoC4/SPIS_HOST.c ****             if(SPIS_HOST_rxBufferFull == 0u)
 673:Generated_Source\PSoC4/SPIS_HOST.c ****             {
 674:Generated_Source\PSoC4/SPIS_HOST.c ****                 SPIS_HOST_rxBufferRead++;
 675:Generated_Source\PSoC4/SPIS_HOST.c ****                 if(SPIS_HOST_rxBufferRead >= SPIS_HOST_RX_BUFFER_SIZE)
 676:Generated_Source\PSoC4/SPIS_HOST.c ****                 {
 677:Generated_Source\PSoC4/SPIS_HOST.c ****                     SPIS_HOST_rxBufferRead = 0u;
 678:Generated_Source\PSoC4/SPIS_HOST.c ****                 }
 679:Generated_Source\PSoC4/SPIS_HOST.c ****             }
 680:Generated_Source\PSoC4/SPIS_HOST.c ****             else
 681:Generated_Source\PSoC4/SPIS_HOST.c ****             {
 682:Generated_Source\PSoC4/SPIS_HOST.c ****                 SPIS_HOST_rxBufferFull = 0u;
 683:Generated_Source\PSoC4/SPIS_HOST.c ****             }
 684:Generated_Source\PSoC4/SPIS_HOST.c ****         }
 685:Generated_Source\PSoC4/SPIS_HOST.c **** 
 686:Generated_Source\PSoC4/SPIS_HOST.c ****         rxData = SPIS_HOST_rxBuffer[SPIS_HOST_rxBufferRead];
 687:Generated_Source\PSoC4/SPIS_HOST.c **** 
 688:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Enable Interrupt. */
 689:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_EnableRxInt();
 690:Generated_Source\PSoC4/SPIS_HOST.c **** 
 691:Generated_Source\PSoC4/SPIS_HOST.c ****     #else /* !SPIS_HOST_RX_SOFTWARE_BUF_ENABLED */
 692:Generated_Source\PSoC4/SPIS_HOST.c **** 
 693:Generated_Source\PSoC4/SPIS_HOST.c ****         rxData = CY_GET_REG8(SPIS_HOST_RXDATA_PTR);
 378              		.loc 1 693 0
 379 0000 014B     		ldr	r3, .L31
 380 0002 1878     		ldrb	r0, [r3]
 381 0004 C0B2     		uxtb	r0, r0
 382              	.LVL10:
 694:Generated_Source\PSoC4/SPIS_HOST.c **** 
 695:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_RX_SOFTWARE_BUF_ENABLED */
 696:Generated_Source\PSoC4/SPIS_HOST.c **** 
 697:Generated_Source\PSoC4/SPIS_HOST.c ****     return (rxData);
 698:Generated_Source\PSoC4/SPIS_HOST.c **** 
 699:Generated_Source\PSoC4/SPIS_HOST.c **** }
 383              		.loc 1 699 0
 384              		@ sp needed
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 20


 385 0006 7047     		bx	lr
 386              	.L32:
 387              		.align	2
 388              	.L31:
 389 0008 50000F40 		.word	1074724944
 390              		.cfi_endproc
 391              	.LFE15:
 392              		.size	SPIS_HOST_ReadRxData, .-SPIS_HOST_ReadRxData
 393              		.section	.text.SPIS_HOST_GetRxBufferSize,"ax",%progbits
 394              		.align	2
 395              		.global	SPIS_HOST_GetRxBufferSize
 396              		.code	16
 397              		.thumb_func
 398              		.type	SPIS_HOST_GetRxBufferSize, %function
 399              	SPIS_HOST_GetRxBufferSize:
 400              	.LFB16:
 700:Generated_Source\PSoC4/SPIS_HOST.c **** 
 701:Generated_Source\PSoC4/SPIS_HOST.c **** 
 702:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
 703:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_GetRxBufferSize
 704:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
 705:Generated_Source\PSoC4/SPIS_HOST.c **** *
 706:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
 707:Generated_Source\PSoC4/SPIS_HOST.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 708:Generated_Source\PSoC4/SPIS_HOST.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 709:Generated_Source\PSoC4/SPIS_HOST.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 710:Generated_Source\PSoC4/SPIS_HOST.c **** *
 711:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
 712:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 713:Generated_Source\PSoC4/SPIS_HOST.c **** *
 714:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
 715:Generated_Source\PSoC4/SPIS_HOST.c **** *  Integer count of the number of bytes/words in the RX buffer.
 716:Generated_Source\PSoC4/SPIS_HOST.c **** *
 717:Generated_Source\PSoC4/SPIS_HOST.c **** * Global variables:
 718:Generated_Source\PSoC4/SPIS_HOST.c **** *  SPIS_HOST_rxBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC4/SPIS_HOST.c **** *  have been written down in the RX software buffer.
 720:Generated_Source\PSoC4/SPIS_HOST.c **** *  SPIS_HOST_rxBufferRead - used for the account of the bytes which
 721:Generated_Source\PSoC4/SPIS_HOST.c **** *  have been read from the RX software buffer.
 722:Generated_Source\PSoC4/SPIS_HOST.c **** *
 723:Generated_Source\PSoC4/SPIS_HOST.c **** * Theory:
 724:Generated_Source\PSoC4/SPIS_HOST.c **** *  Allows the user to find out how full the RX Buffer is.
 725:Generated_Source\PSoC4/SPIS_HOST.c **** *
 726:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
 727:Generated_Source\PSoC4/SPIS_HOST.c **** uint8 SPIS_HOST_GetRxBufferSize(void) 
 728:Generated_Source\PSoC4/SPIS_HOST.c **** {
 401              		.loc 1 728 0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 0, uses_anonymous_args = 0
 405              		@ link register save eliminated.
 729:Generated_Source\PSoC4/SPIS_HOST.c ****     uint8 size;
 730:Generated_Source\PSoC4/SPIS_HOST.c **** 
 731:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_RX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC4/SPIS_HOST.c **** 
 733:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 734:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_DisableRxInt();
 735:Generated_Source\PSoC4/SPIS_HOST.c **** 
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 21


 736:Generated_Source\PSoC4/SPIS_HOST.c ****         if(SPIS_HOST_rxBufferRead == SPIS_HOST_rxBufferWrite)
 737:Generated_Source\PSoC4/SPIS_HOST.c ****         {
 738:Generated_Source\PSoC4/SPIS_HOST.c ****             size = 0u; /* No data in RX buffer */
 739:Generated_Source\PSoC4/SPIS_HOST.c ****         }
 740:Generated_Source\PSoC4/SPIS_HOST.c ****         else if(SPIS_HOST_rxBufferRead < SPIS_HOST_rxBufferWrite)
 741:Generated_Source\PSoC4/SPIS_HOST.c ****         {
 742:Generated_Source\PSoC4/SPIS_HOST.c ****             size = (SPIS_HOST_rxBufferWrite - SPIS_HOST_rxBufferRead);
 743:Generated_Source\PSoC4/SPIS_HOST.c ****         }
 744:Generated_Source\PSoC4/SPIS_HOST.c ****         else
 745:Generated_Source\PSoC4/SPIS_HOST.c ****         {
 746:Generated_Source\PSoC4/SPIS_HOST.c ****             size = (SPIS_HOST_RX_BUFFER_SIZE - SPIS_HOST_rxBufferRead) + SPIS_HOST_rxBufferWrite;
 747:Generated_Source\PSoC4/SPIS_HOST.c ****         }
 748:Generated_Source\PSoC4/SPIS_HOST.c **** 
 749:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Enable interrupt. */
 750:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_EnableRxInt();
 751:Generated_Source\PSoC4/SPIS_HOST.c **** 
 752:Generated_Source\PSoC4/SPIS_HOST.c ****     #else /* !SPIS_HOST_RX_SOFTWARE_BUF_ENABLED*/
 753:Generated_Source\PSoC4/SPIS_HOST.c **** 
 754:Generated_Source\PSoC4/SPIS_HOST.c ****         /* We can only know if there is data in the fifo. */
 755:Generated_Source\PSoC4/SPIS_HOST.c ****         size = ((SPIS_HOST_RX_STATUS_REG & SPIS_HOST_STS_RX_FIFO_NOT_EMPTY) != 0u) ? 1u : 0u;
 406              		.loc 1 755 0
 407 0000 034B     		ldr	r3, .L36
 408 0002 1B78     		ldrb	r3, [r3]
 409 0004 1B07     		lsls	r3, r3, #28
 410 0006 01D5     		bpl	.L35
 411 0008 0120     		movs	r0, #1
 412 000a 00E0     		b	.L34
 413              	.L35:
 414 000c 0020     		movs	r0, #0
 415              	.L34:
 416              	.LVL11:
 756:Generated_Source\PSoC4/SPIS_HOST.c **** 
 757:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_RX_SOFTWARE_BUF_ENABLED */
 758:Generated_Source\PSoC4/SPIS_HOST.c **** 
 759:Generated_Source\PSoC4/SPIS_HOST.c ****     return (size);
 760:Generated_Source\PSoC4/SPIS_HOST.c **** }
 417              		.loc 1 760 0 discriminator 4
 418              		@ sp needed
 419 000e 7047     		bx	lr
 420              	.L37:
 421              		.align	2
 422              	.L36:
 423 0010 60000F40 		.word	1074724960
 424              		.cfi_endproc
 425              	.LFE16:
 426              		.size	SPIS_HOST_GetRxBufferSize, .-SPIS_HOST_GetRxBufferSize
 427              		.section	.text.SPIS_HOST_GetTxBufferSize,"ax",%progbits
 428              		.align	2
 429              		.global	SPIS_HOST_GetTxBufferSize
 430              		.code	16
 431              		.thumb_func
 432              		.type	SPIS_HOST_GetTxBufferSize, %function
 433              	SPIS_HOST_GetTxBufferSize:
 434              	.LFB17:
 761:Generated_Source\PSoC4/SPIS_HOST.c **** 
 762:Generated_Source\PSoC4/SPIS_HOST.c **** 
 763:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 22


 764:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_GetTxBufferSize
 765:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
 766:Generated_Source\PSoC4/SPIS_HOST.c **** *
 767:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
 768:Generated_Source\PSoC4/SPIS_HOST.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 769:Generated_Source\PSoC4/SPIS_HOST.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 770:Generated_Source\PSoC4/SPIS_HOST.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 771:Generated_Source\PSoC4/SPIS_HOST.c **** *  Software Buffer.
 772:Generated_Source\PSoC4/SPIS_HOST.c **** *
 773:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
 774:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 775:Generated_Source\PSoC4/SPIS_HOST.c **** *
 776:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
 777:Generated_Source\PSoC4/SPIS_HOST.c **** *  Integer count of the number of bytes/words in the TX buffer.
 778:Generated_Source\PSoC4/SPIS_HOST.c **** *
 779:Generated_Source\PSoC4/SPIS_HOST.c **** * Global variables:
 780:Generated_Source\PSoC4/SPIS_HOST.c **** *  SPIS_HOST_txBufferWrite - used for the account of the bytes which
 781:Generated_Source\PSoC4/SPIS_HOST.c **** *  have been written down in the TX software buffer.
 782:Generated_Source\PSoC4/SPIS_HOST.c **** *  SPIS_HOST_txBufferRead - used for the account of the bytes which
 783:Generated_Source\PSoC4/SPIS_HOST.c **** *  have been read from the TX software buffer.
 784:Generated_Source\PSoC4/SPIS_HOST.c **** *
 785:Generated_Source\PSoC4/SPIS_HOST.c **** * Theory:
 786:Generated_Source\PSoC4/SPIS_HOST.c **** *  Allows the user to find out how full the TX Buffer is.
 787:Generated_Source\PSoC4/SPIS_HOST.c **** *
 788:Generated_Source\PSoC4/SPIS_HOST.c **** * Side Effects:
 789:Generated_Source\PSoC4/SPIS_HOST.c **** *  Clear status register of the component.
 790:Generated_Source\PSoC4/SPIS_HOST.c **** *
 791:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
 792:Generated_Source\PSoC4/SPIS_HOST.c **** uint8  SPIS_HOST_GetTxBufferSize(void) 
 793:Generated_Source\PSoC4/SPIS_HOST.c **** {
 435              		.loc 1 793 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439              		@ link register save eliminated.
 794:Generated_Source\PSoC4/SPIS_HOST.c ****     uint8 size;
 795:Generated_Source\PSoC4/SPIS_HOST.c **** 
 796:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_TX_SOFTWARE_BUF_ENABLED)
 797:Generated_Source\PSoC4/SPIS_HOST.c **** 
 798:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 799:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_DisableTxInt();
 800:Generated_Source\PSoC4/SPIS_HOST.c **** 
 801:Generated_Source\PSoC4/SPIS_HOST.c ****         if(SPIS_HOST_txBufferRead == SPIS_HOST_txBufferWrite)
 802:Generated_Source\PSoC4/SPIS_HOST.c ****         {
 803:Generated_Source\PSoC4/SPIS_HOST.c ****             size = 0u;
 804:Generated_Source\PSoC4/SPIS_HOST.c ****         }
 805:Generated_Source\PSoC4/SPIS_HOST.c ****         else if(SPIS_HOST_txBufferRead < SPIS_HOST_txBufferWrite)
 806:Generated_Source\PSoC4/SPIS_HOST.c ****         {
 807:Generated_Source\PSoC4/SPIS_HOST.c ****             size = (SPIS_HOST_txBufferWrite - SPIS_HOST_txBufferRead);
 808:Generated_Source\PSoC4/SPIS_HOST.c ****         }
 809:Generated_Source\PSoC4/SPIS_HOST.c ****         else
 810:Generated_Source\PSoC4/SPIS_HOST.c ****         {
 811:Generated_Source\PSoC4/SPIS_HOST.c ****             size = (SPIS_HOST_TX_BUFFER_SIZE - SPIS_HOST_txBufferRead) + SPIS_HOST_txBufferWrite;
 812:Generated_Source\PSoC4/SPIS_HOST.c ****         }
 813:Generated_Source\PSoC4/SPIS_HOST.c **** 
 814:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Enable Interrupt. */
 815:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_EnableTxInt();
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 23


 816:Generated_Source\PSoC4/SPIS_HOST.c **** 
 817:Generated_Source\PSoC4/SPIS_HOST.c ****     #else /* !SPIS_HOST_TX_SOFTWARE_BUF_ENABLED */
 818:Generated_Source\PSoC4/SPIS_HOST.c **** 
 819:Generated_Source\PSoC4/SPIS_HOST.c ****         size = SPIS_HOST_TX_STATUS_REG;
 440              		.loc 1 819 0
 441 0000 064B     		ldr	r3, .L42
 442 0002 1B78     		ldrb	r3, [r3]
 443 0004 DBB2     		uxtb	r3, r3
 444              	.LVL12:
 820:Generated_Source\PSoC4/SPIS_HOST.c **** 
 821:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Is the fifo is full. */
 822:Generated_Source\PSoC4/SPIS_HOST.c ****         if((size & SPIS_HOST_STS_TX_FIFO_EMPTY) != 0u)
 445              		.loc 1 822 0
 446 0006 5A07     		lsls	r2, r3, #29
 447 0008 03D4     		bmi	.L40
 823:Generated_Source\PSoC4/SPIS_HOST.c ****         {
 824:Generated_Source\PSoC4/SPIS_HOST.c ****             size = 0u;
 825:Generated_Source\PSoC4/SPIS_HOST.c ****         }
 826:Generated_Source\PSoC4/SPIS_HOST.c ****         else if((size & SPIS_HOST_STS_TX_FIFO_NOT_FULL) != 0u)
 448              		.loc 1 826 0
 449 000a 9B07     		lsls	r3, r3, #30
 450 000c 03D5     		bpl	.L41
 451              	.LVL13:
 827:Generated_Source\PSoC4/SPIS_HOST.c ****         {
 828:Generated_Source\PSoC4/SPIS_HOST.c ****             size = 1u;
 452              		.loc 1 828 0
 453 000e 0120     		movs	r0, #1
 454 0010 02E0     		b	.L39
 455              	.LVL14:
 456              	.L40:
 824:Generated_Source\PSoC4/SPIS_HOST.c ****         }
 457              		.loc 1 824 0
 458 0012 0020     		movs	r0, #0
 459 0014 00E0     		b	.L39
 460              	.LVL15:
 461              	.L41:
 829:Generated_Source\PSoC4/SPIS_HOST.c ****         }
 830:Generated_Source\PSoC4/SPIS_HOST.c ****         else
 831:Generated_Source\PSoC4/SPIS_HOST.c ****         {
 832:Generated_Source\PSoC4/SPIS_HOST.c ****             size = 4u;
 462              		.loc 1 832 0
 463 0016 0420     		movs	r0, #4
 464              	.L39:
 465              	.LVL16:
 833:Generated_Source\PSoC4/SPIS_HOST.c ****         }
 834:Generated_Source\PSoC4/SPIS_HOST.c **** 
 835:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_TX_SOFTWARE_BUF_ENABLED */
 836:Generated_Source\PSoC4/SPIS_HOST.c **** 
 837:Generated_Source\PSoC4/SPIS_HOST.c ****     return (size);
 838:Generated_Source\PSoC4/SPIS_HOST.c **** }
 466              		.loc 1 838 0
 467              		@ sp needed
 468 0018 7047     		bx	lr
 469              	.L43:
 470 001a C046     		.align	2
 471              	.L42:
 472 001c 61000F40 		.word	1074724961
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 24


 473              		.cfi_endproc
 474              	.LFE17:
 475              		.size	SPIS_HOST_GetTxBufferSize, .-SPIS_HOST_GetTxBufferSize
 476              		.section	.text.SPIS_HOST_ClearRxBuffer,"ax",%progbits
 477              		.align	2
 478              		.global	SPIS_HOST_ClearRxBuffer
 479              		.code	16
 480              		.thumb_func
 481              		.type	SPIS_HOST_ClearRxBuffer, %function
 482              	SPIS_HOST_ClearRxBuffer:
 483              	.LFB18:
 839:Generated_Source\PSoC4/SPIS_HOST.c **** 
 840:Generated_Source\PSoC4/SPIS_HOST.c **** 
 841:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
 842:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_ClearRxBuffer
 843:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
 844:Generated_Source\PSoC4/SPIS_HOST.c **** *
 845:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
 846:Generated_Source\PSoC4/SPIS_HOST.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 847:Generated_Source\PSoC4/SPIS_HOST.c **** *
 848:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
 849:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 850:Generated_Source\PSoC4/SPIS_HOST.c **** *
 851:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
 852:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 853:Generated_Source\PSoC4/SPIS_HOST.c **** *
 854:Generated_Source\PSoC4/SPIS_HOST.c **** * Global variables:
 855:Generated_Source\PSoC4/SPIS_HOST.c **** *  SPIS_HOST_rxBufferWrite - used for the account of the bytes which
 856:Generated_Source\PSoC4/SPIS_HOST.c **** *  have been written down in the RX software buffer, modified every function
 857:Generated_Source\PSoC4/SPIS_HOST.c **** *  call - resets to zero.
 858:Generated_Source\PSoC4/SPIS_HOST.c **** *  SPIS_HOST_rxBufferRead - used for the account of the bytes which
 859:Generated_Source\PSoC4/SPIS_HOST.c **** *  have been read from the RX software buffer, modified every function call -
 860:Generated_Source\PSoC4/SPIS_HOST.c **** *  resets to zero.
 861:Generated_Source\PSoC4/SPIS_HOST.c **** *
 862:Generated_Source\PSoC4/SPIS_HOST.c **** * Theory:
 863:Generated_Source\PSoC4/SPIS_HOST.c **** *  Setting the pointers to zero makes the system believe there is no data to
 864:Generated_Source\PSoC4/SPIS_HOST.c **** *  read and writing will resume at address 0 overwriting any data that may have
 865:Generated_Source\PSoC4/SPIS_HOST.c **** *  remained in the RAM.
 866:Generated_Source\PSoC4/SPIS_HOST.c **** *
 867:Generated_Source\PSoC4/SPIS_HOST.c **** * Side Effects:
 868:Generated_Source\PSoC4/SPIS_HOST.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 869:Generated_Source\PSoC4/SPIS_HOST.c **** *
 870:Generated_Source\PSoC4/SPIS_HOST.c **** * Reentrant:
 871:Generated_Source\PSoC4/SPIS_HOST.c **** *  No.
 872:Generated_Source\PSoC4/SPIS_HOST.c **** *
 873:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
 874:Generated_Source\PSoC4/SPIS_HOST.c **** void SPIS_HOST_ClearRxBuffer(void) 
 875:Generated_Source\PSoC4/SPIS_HOST.c **** {
 484              		.loc 1 875 0
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 0
 487              		@ frame_needed = 0, uses_anonymous_args = 0
 488              		@ link register save eliminated.
 876:Generated_Source\PSoC4/SPIS_HOST.c ****     /* Clear Hardware RX FIFO */
 877:Generated_Source\PSoC4/SPIS_HOST.c ****     while((SPIS_HOST_RX_STATUS_REG & SPIS_HOST_STS_RX_FIFO_NOT_EMPTY) != 0u)
 489              		.loc 1 877 0
 490 0000 01E0     		b	.L45
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 25


 491              	.L46:
 878:Generated_Source\PSoC4/SPIS_HOST.c ****     {
 879:Generated_Source\PSoC4/SPIS_HOST.c ****         CY_GET_REG8(SPIS_HOST_RXDATA_PTR);
 492              		.loc 1 879 0
 493 0002 034B     		ldr	r3, .L47
 494 0004 1B78     		ldrb	r3, [r3]
 495              	.L45:
 877:Generated_Source\PSoC4/SPIS_HOST.c ****     {
 496              		.loc 1 877 0
 497 0006 034B     		ldr	r3, .L47+4
 498 0008 1B78     		ldrb	r3, [r3]
 499 000a 1B07     		lsls	r3, r3, #28
 500 000c F9D4     		bmi	.L46
 880:Generated_Source\PSoC4/SPIS_HOST.c ****     }
 881:Generated_Source\PSoC4/SPIS_HOST.c **** 
 882:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_RX_SOFTWARE_BUF_ENABLED)
 883:Generated_Source\PSoC4/SPIS_HOST.c **** 
 884:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Disable interrupt to protect variables that could change on interrupt. */
 885:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_DisableRxInt();
 886:Generated_Source\PSoC4/SPIS_HOST.c **** 
 887:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_rxBufferRead  = 0u;
 888:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_rxBufferWrite = 0u;
 889:Generated_Source\PSoC4/SPIS_HOST.c **** 		SPIS_HOST_rxBufferFull  = 0u;
 890:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Enable interrupt. */
 891:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_EnableRxInt();
 892:Generated_Source\PSoC4/SPIS_HOST.c **** 
 893:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_RX_SOFTWARE_BUF_ENABLED */
 894:Generated_Source\PSoC4/SPIS_HOST.c **** }
 501              		.loc 1 894 0
 502              		@ sp needed
 503 000e 7047     		bx	lr
 504              	.L48:
 505              		.align	2
 506              	.L47:
 507 0010 50000F40 		.word	1074724944
 508 0014 60000F40 		.word	1074724960
 509              		.cfi_endproc
 510              	.LFE18:
 511              		.size	SPIS_HOST_ClearRxBuffer, .-SPIS_HOST_ClearRxBuffer
 512              		.section	.text.SPIS_HOST_ClearTxBuffer,"ax",%progbits
 513              		.align	2
 514              		.global	SPIS_HOST_ClearTxBuffer
 515              		.code	16
 516              		.thumb_func
 517              		.type	SPIS_HOST_ClearTxBuffer, %function
 518              	SPIS_HOST_ClearTxBuffer:
 519              	.LFB19:
 895:Generated_Source\PSoC4/SPIS_HOST.c **** 
 896:Generated_Source\PSoC4/SPIS_HOST.c **** 
 897:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
 898:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_ClearTxBuffer
 899:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
 900:Generated_Source\PSoC4/SPIS_HOST.c **** *
 901:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
 902:Generated_Source\PSoC4/SPIS_HOST.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 903:Generated_Source\PSoC4/SPIS_HOST.c **** *
 904:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 26


 905:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 906:Generated_Source\PSoC4/SPIS_HOST.c **** *
 907:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
 908:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
 909:Generated_Source\PSoC4/SPIS_HOST.c **** *
 910:Generated_Source\PSoC4/SPIS_HOST.c **** * Global variables:
 911:Generated_Source\PSoC4/SPIS_HOST.c **** *  SPIS_HOST_txBufferWrite - used for the account of the bytes which
 912:Generated_Source\PSoC4/SPIS_HOST.c **** *  have been written down in the TX software buffer, modified every function
 913:Generated_Source\PSoC4/SPIS_HOST.c **** *  call - resets to zero.
 914:Generated_Source\PSoC4/SPIS_HOST.c **** *  SPIS_HOST_txBufferRead - used for the account of the bytes which
 915:Generated_Source\PSoC4/SPIS_HOST.c **** *  have been read from the TX software buffer, modified every function call -
 916:Generated_Source\PSoC4/SPIS_HOST.c **** *  resets to zero.
 917:Generated_Source\PSoC4/SPIS_HOST.c **** *
 918:Generated_Source\PSoC4/SPIS_HOST.c **** * Theory:
 919:Generated_Source\PSoC4/SPIS_HOST.c **** *  Setting the pointers to zero makes the system believe there is no data to
 920:Generated_Source\PSoC4/SPIS_HOST.c **** *  read and writing will resume at address 0 overwriting any data that may have
 921:Generated_Source\PSoC4/SPIS_HOST.c **** *  remained in the RAM.
 922:Generated_Source\PSoC4/SPIS_HOST.c **** *
 923:Generated_Source\PSoC4/SPIS_HOST.c **** * Side Effects:
 924:Generated_Source\PSoC4/SPIS_HOST.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 925:Generated_Source\PSoC4/SPIS_HOST.c **** *  overwritten.
 926:Generated_Source\PSoC4/SPIS_HOST.c **** *
 927:Generated_Source\PSoC4/SPIS_HOST.c **** * Reentrant:
 928:Generated_Source\PSoC4/SPIS_HOST.c **** *  No.
 929:Generated_Source\PSoC4/SPIS_HOST.c **** *
 930:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
 931:Generated_Source\PSoC4/SPIS_HOST.c **** void SPIS_HOST_ClearTxBuffer(void) 
 932:Generated_Source\PSoC4/SPIS_HOST.c **** {
 520              		.loc 1 932 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524 0000 10B5     		push	{r4, lr}
 525              		.cfi_def_cfa_offset 8
 526              		.cfi_offset 4, -8
 527              		.cfi_offset 14, -4
 933:Generated_Source\PSoC4/SPIS_HOST.c ****     uint8 enableInterrupts;
 934:Generated_Source\PSoC4/SPIS_HOST.c **** 
 935:Generated_Source\PSoC4/SPIS_HOST.c ****     /* Clear Hardware TX FIFO */
 936:Generated_Source\PSoC4/SPIS_HOST.c ****     enableInterrupts = CyEnterCriticalSection();
 528              		.loc 1 936 0
 529 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 530              	.LVL17:
 937:Generated_Source\PSoC4/SPIS_HOST.c **** 
 938:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_DATA_WIDTH <= 8u)
 939:Generated_Source\PSoC4/SPIS_HOST.c **** 
 940:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Clear TX FIFO */
 941:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_HOST_FIFO_CLR;
 531              		.loc 1 941 0
 532 0006 064A     		ldr	r2, .L50
 533 0008 1178     		ldrb	r1, [r2]
 534 000a 0323     		movs	r3, #3
 535 000c 0B43     		orrs	r3, r1
 536 000e DBB2     		uxtb	r3, r3
 537 0010 1370     		strb	r3, [r2]
 942:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_HOST_FIFO_CLR;
 538              		.loc 1 942 0
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 27


 539 0012 1378     		ldrb	r3, [r2]
 540 0014 0321     		movs	r1, #3
 541 0016 8B43     		bics	r3, r1
 542 0018 1370     		strb	r3, [r2]
 943:Generated_Source\PSoC4/SPIS_HOST.c **** 
 944:Generated_Source\PSoC4/SPIS_HOST.c ****     #else
 945:Generated_Source\PSoC4/SPIS_HOST.c **** 
 946:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Clear TX FIFO */
 947:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_HOST_FIFO_CLR;
 948:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_HOST_FIFO_CLR;
 949:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_TX_AUX_CONTROL_DP1_REG |= (uint8)SPIS_HOST_FIFO_CLR;
 950:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_TX_AUX_CONTROL_DP1_REG &= (uint8)~SPIS_HOST_FIFO_CLR;
 951:Generated_Source\PSoC4/SPIS_HOST.c **** 
 952:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_DATA_WIDTH > 8u */
 953:Generated_Source\PSoC4/SPIS_HOST.c **** 
 954:Generated_Source\PSoC4/SPIS_HOST.c ****     CyExitCriticalSection(enableInterrupts);
 543              		.loc 1 954 0
 544 001a FFF7FEFF 		bl	CyExitCriticalSection
 545              	.LVL18:
 955:Generated_Source\PSoC4/SPIS_HOST.c **** 
 956:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_TX_SOFTWARE_BUF_ENABLED)
 957:Generated_Source\PSoC4/SPIS_HOST.c **** 
 958:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 959:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_DisableTxInt();
 960:Generated_Source\PSoC4/SPIS_HOST.c **** 
 961:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_txBufferRead  = 0u;
 962:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_txBufferWrite = 0u;
 963:Generated_Source\PSoC4/SPIS_HOST.c **** 		SPIS_HOST_txBufferFull  = 0u;
 964:Generated_Source\PSoC4/SPIS_HOST.c **** 		
 965:Generated_Source\PSoC4/SPIS_HOST.c ****         /* If Buffer is empty then disable TX FIFO status interrupt */
 966:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_TX_STATUS_MASK_REG &= (uint8)~SPIS_HOST_STS_TX_FIFO_NOT_FULL;
 967:Generated_Source\PSoC4/SPIS_HOST.c **** 
 968:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Enable Interrupt. */
 969:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_EnableTxInt();
 970:Generated_Source\PSoC4/SPIS_HOST.c **** 
 971:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_TX_SOFTWARE_BUF_ENABLED */
 972:Generated_Source\PSoC4/SPIS_HOST.c **** }
 546              		.loc 1 972 0
 547              		@ sp needed
 548 001e 10BD     		pop	{r4, pc}
 549              	.L51:
 550              		.align	2
 551              	.L50:
 552 0020 90000F40 		.word	1074725008
 553              		.cfi_endproc
 554              	.LFE19:
 555              		.size	SPIS_HOST_ClearTxBuffer, .-SPIS_HOST_ClearTxBuffer
 556              		.section	.text.SPIS_HOST_PutArray,"ax",%progbits
 557              		.align	2
 558              		.global	SPIS_HOST_PutArray
 559              		.code	16
 560              		.thumb_func
 561              		.type	SPIS_HOST_PutArray, %function
 562              	SPIS_HOST_PutArray:
 563              	.LFB20:
 973:Generated_Source\PSoC4/SPIS_HOST.c **** 
 974:Generated_Source\PSoC4/SPIS_HOST.c **** 
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 28


 975:Generated_Source\PSoC4/SPIS_HOST.c **** #if (SPIS_HOST_BIDIRECTIONAL_MODE != 0u)
 976:Generated_Source\PSoC4/SPIS_HOST.c **** 
 977:Generated_Source\PSoC4/SPIS_HOST.c ****     /*******************************************************************************
 978:Generated_Source\PSoC4/SPIS_HOST.c ****     * Function Name: SPIS_HOST_TxEnable
 979:Generated_Source\PSoC4/SPIS_HOST.c ****     ********************************************************************************
 980:Generated_Source\PSoC4/SPIS_HOST.c ****     *
 981:Generated_Source\PSoC4/SPIS_HOST.c ****     * Summary:
 982:Generated_Source\PSoC4/SPIS_HOST.c ****     *  If the SPI Slave is configured to use a single bi-directional pin then this
 983:Generated_Source\PSoC4/SPIS_HOST.c ****     *  will set the bi-directional pin to transmit.
 984:Generated_Source\PSoC4/SPIS_HOST.c ****     *
 985:Generated_Source\PSoC4/SPIS_HOST.c ****     * Parameters:
 986:Generated_Source\PSoC4/SPIS_HOST.c ****     *  None.
 987:Generated_Source\PSoC4/SPIS_HOST.c ****     *
 988:Generated_Source\PSoC4/SPIS_HOST.c ****     * Return:
 989:Generated_Source\PSoC4/SPIS_HOST.c ****     *  None.
 990:Generated_Source\PSoC4/SPIS_HOST.c ****     *
 991:Generated_Source\PSoC4/SPIS_HOST.c ****     *******************************************************************************/
 992:Generated_Source\PSoC4/SPIS_HOST.c ****     void SPIS_HOST_TxEnable(void) 
 993:Generated_Source\PSoC4/SPIS_HOST.c ****     {
 994:Generated_Source\PSoC4/SPIS_HOST.c ****             SPIS_HOST_CONTROL_REG |= SPIS_HOST_CTRL_TX_SIGNAL_EN;
 995:Generated_Source\PSoC4/SPIS_HOST.c ****     }
 996:Generated_Source\PSoC4/SPIS_HOST.c **** 
 997:Generated_Source\PSoC4/SPIS_HOST.c **** 
 998:Generated_Source\PSoC4/SPIS_HOST.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/SPIS_HOST.c ****     * Function Name: SPIS_HOST_TxDisable
1000:Generated_Source\PSoC4/SPIS_HOST.c ****     ********************************************************************************
1001:Generated_Source\PSoC4/SPIS_HOST.c ****     *
1002:Generated_Source\PSoC4/SPIS_HOST.c ****     * Summary:
1003:Generated_Source\PSoC4/SPIS_HOST.c ****     *  If the SPI Slave is configured to use a single bi-directional pin then this
1004:Generated_Source\PSoC4/SPIS_HOST.c ****     *  will set the bi-directional pin to receive.
1005:Generated_Source\PSoC4/SPIS_HOST.c ****     *
1006:Generated_Source\PSoC4/SPIS_HOST.c ****     * Parameters:
1007:Generated_Source\PSoC4/SPIS_HOST.c ****     *  None.
1008:Generated_Source\PSoC4/SPIS_HOST.c ****     *
1009:Generated_Source\PSoC4/SPIS_HOST.c ****     * Return:
1010:Generated_Source\PSoC4/SPIS_HOST.c ****     *  None.
1011:Generated_Source\PSoC4/SPIS_HOST.c ****     *
1012:Generated_Source\PSoC4/SPIS_HOST.c ****     *******************************************************************************/
1013:Generated_Source\PSoC4/SPIS_HOST.c ****     void SPIS_HOST_TxDisable(void) 
1014:Generated_Source\PSoC4/SPIS_HOST.c ****     {
1015:Generated_Source\PSoC4/SPIS_HOST.c ****             SPIS_HOST_CONTROL_REG &= (uint8)~SPIS_HOST_CTRL_TX_SIGNAL_EN;
1016:Generated_Source\PSoC4/SPIS_HOST.c ****     }
1017:Generated_Source\PSoC4/SPIS_HOST.c **** 
1018:Generated_Source\PSoC4/SPIS_HOST.c **** #endif /* SPIS_HOST_BIDIRECTIONAL_MODE != 0u */
1019:Generated_Source\PSoC4/SPIS_HOST.c **** 
1020:Generated_Source\PSoC4/SPIS_HOST.c **** 
1021:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
1022:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_PutArray
1023:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
1024:Generated_Source\PSoC4/SPIS_HOST.c **** *
1025:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
1026:Generated_Source\PSoC4/SPIS_HOST.c **** *  Write available data from RAM/ROM to the TX buffer while space is available
1027:Generated_Source\PSoC4/SPIS_HOST.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer. If
1028:Generated_Source\PSoC4/SPIS_HOST.c **** *  used Mode 00 or 01 before PutArray() function should be called
1029:Generated_Source\PSoC4/SPIS_HOST.c **** *  WriteTxDataZero() function.
1030:Generated_Source\PSoC4/SPIS_HOST.c **** *
1031:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 29


1032:Generated_Source\PSoC4/SPIS_HOST.c **** *  *buffer: Pointer to the location in RAM containing the data to send
1033:Generated_Source\PSoC4/SPIS_HOST.c **** *  byteCount: The number of bytes to move to the transmit buffer.
1034:Generated_Source\PSoC4/SPIS_HOST.c **** *
1035:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
1036:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
1037:Generated_Source\PSoC4/SPIS_HOST.c **** *
1038:Generated_Source\PSoC4/SPIS_HOST.c **** * Side Effects:
1039:Generated_Source\PSoC4/SPIS_HOST.c **** *  Will stay in this routine until all data has been sent.  May get locked in
1040:Generated_Source\PSoC4/SPIS_HOST.c **** *  this loop if data is not being initiated by the master if there is not
1041:Generated_Source\PSoC4/SPIS_HOST.c **** *  enough room in the TX FIFO.
1042:Generated_Source\PSoC4/SPIS_HOST.c **** *
1043:Generated_Source\PSoC4/SPIS_HOST.c **** * Reentrant:
1044:Generated_Source\PSoC4/SPIS_HOST.c **** *  No.
1045:Generated_Source\PSoC4/SPIS_HOST.c **** *
1046:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
1047:Generated_Source\PSoC4/SPIS_HOST.c **** void SPIS_HOST_PutArray(const uint8 buffer[], uint8 byteCount)
1048:Generated_Source\PSoC4/SPIS_HOST.c ****                                                                     
1049:Generated_Source\PSoC4/SPIS_HOST.c **** {
 564              		.loc 1 1049 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              	.LVL19:
 569 0000 70B5     		push	{r4, r5, r6, lr}
 570              		.cfi_def_cfa_offset 16
 571              		.cfi_offset 4, -16
 572              		.cfi_offset 5, -12
 573              		.cfi_offset 6, -8
 574              		.cfi_offset 14, -4
 575 0002 0600     		movs	r6, r0
 576 0004 0C00     		movs	r4, r1
 577              	.LVL20:
1050:Generated_Source\PSoC4/SPIS_HOST.c ****     uint8 bufIndex;
1051:Generated_Source\PSoC4/SPIS_HOST.c ****     bufIndex = 0u;
 578              		.loc 1 1051 0
 579 0006 0025     		movs	r5, #0
1052:Generated_Source\PSoC4/SPIS_HOST.c **** 
1053:Generated_Source\PSoC4/SPIS_HOST.c ****     while(byteCount > 0u)
 580              		.loc 1 1053 0
 581 0008 06E0     		b	.L53
 582              	.LVL21:
 583              	.L54:
1054:Generated_Source\PSoC4/SPIS_HOST.c ****     {
1055:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_WriteTxData(buffer[bufIndex]);
 584              		.loc 1 1055 0
 585 000a 705D     		ldrb	r0, [r6, r5]
 586 000c FFF7FEFF 		bl	SPIS_HOST_WriteTxData
 587              	.LVL22:
1056:Generated_Source\PSoC4/SPIS_HOST.c ****         bufIndex++;
 588              		.loc 1 1056 0
 589 0010 0135     		adds	r5, r5, #1
 590              	.LVL23:
 591 0012 EDB2     		uxtb	r5, r5
 592              	.LVL24:
1057:Generated_Source\PSoC4/SPIS_HOST.c ****         byteCount--;
 593              		.loc 1 1057 0
 594 0014 013C     		subs	r4, r4, #1
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 30


 595              	.LVL25:
 596 0016 E4B2     		uxtb	r4, r4
 597              	.LVL26:
 598              	.L53:
1053:Generated_Source\PSoC4/SPIS_HOST.c ****     {
 599              		.loc 1 1053 0
 600 0018 002C     		cmp	r4, #0
 601 001a F6D1     		bne	.L54
1058:Generated_Source\PSoC4/SPIS_HOST.c ****     }
1059:Generated_Source\PSoC4/SPIS_HOST.c **** }
 602              		.loc 1 1059 0
 603              		@ sp needed
 604              	.LVL27:
 605              	.LVL28:
 606              	.LVL29:
 607 001c 70BD     		pop	{r4, r5, r6, pc}
 608              		.cfi_endproc
 609              	.LFE20:
 610              		.size	SPIS_HOST_PutArray, .-SPIS_HOST_PutArray
 611 001e C046     		.section	.text.SPIS_HOST_ClearFIFO,"ax",%progbits
 612              		.align	2
 613              		.global	SPIS_HOST_ClearFIFO
 614              		.code	16
 615              		.thumb_func
 616              		.type	SPIS_HOST_ClearFIFO, %function
 617              	SPIS_HOST_ClearFIFO:
 618              	.LFB21:
1060:Generated_Source\PSoC4/SPIS_HOST.c **** 
1061:Generated_Source\PSoC4/SPIS_HOST.c **** 
1062:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
1063:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_ClearFIFO
1064:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
1065:Generated_Source\PSoC4/SPIS_HOST.c **** *
1066:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
1067:Generated_Source\PSoC4/SPIS_HOST.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
1068:Generated_Source\PSoC4/SPIS_HOST.c **** *
1069:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
1070:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
1071:Generated_Source\PSoC4/SPIS_HOST.c **** *
1072:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
1073:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
1074:Generated_Source\PSoC4/SPIS_HOST.c **** *
1075:Generated_Source\PSoC4/SPIS_HOST.c **** * Side Effects:
1076:Generated_Source\PSoC4/SPIS_HOST.c **** *  Clear status register of the component.
1077:Generated_Source\PSoC4/SPIS_HOST.c **** *
1078:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
1079:Generated_Source\PSoC4/SPIS_HOST.c **** void SPIS_HOST_ClearFIFO(void) 
1080:Generated_Source\PSoC4/SPIS_HOST.c **** {
 619              		.loc 1 1080 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 0, uses_anonymous_args = 0
 623 0000 10B5     		push	{r4, lr}
 624              		.cfi_def_cfa_offset 8
 625              		.cfi_offset 4, -8
 626              		.cfi_offset 14, -4
1081:Generated_Source\PSoC4/SPIS_HOST.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 31


1082:Generated_Source\PSoC4/SPIS_HOST.c **** 
1083:Generated_Source\PSoC4/SPIS_HOST.c ****     while((SPIS_HOST_RX_STATUS_REG & SPIS_HOST_STS_RX_FIFO_NOT_EMPTY) != 0u)
 627              		.loc 1 1083 0
 628 0002 01E0     		b	.L56
 629              	.L57:
1084:Generated_Source\PSoC4/SPIS_HOST.c ****     {
1085:Generated_Source\PSoC4/SPIS_HOST.c ****         CY_GET_REG8(SPIS_HOST_RXDATA_PTR);
 630              		.loc 1 1085 0
 631 0004 0A4B     		ldr	r3, .L58
 632 0006 1B78     		ldrb	r3, [r3]
 633              	.L56:
1083:Generated_Source\PSoC4/SPIS_HOST.c ****     {
 634              		.loc 1 1083 0
 635 0008 0A4B     		ldr	r3, .L58+4
 636 000a 1B78     		ldrb	r3, [r3]
 637 000c 1B07     		lsls	r3, r3, #28
 638 000e F9D4     		bmi	.L57
1086:Generated_Source\PSoC4/SPIS_HOST.c ****     }
1087:Generated_Source\PSoC4/SPIS_HOST.c **** 
1088:Generated_Source\PSoC4/SPIS_HOST.c ****     enableInterrupts = CyEnterCriticalSection();
 639              		.loc 1 1088 0
 640 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 641              	.LVL30:
1089:Generated_Source\PSoC4/SPIS_HOST.c **** 
1090:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_DATA_WIDTH <= 8u)
1091:Generated_Source\PSoC4/SPIS_HOST.c **** 
1092:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Clear TX FIFO */
1093:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_HOST_FIFO_CLR;
 642              		.loc 1 1093 0
 643 0014 084A     		ldr	r2, .L58+8
 644 0016 1178     		ldrb	r1, [r2]
 645 0018 0323     		movs	r3, #3
 646 001a 0B43     		orrs	r3, r1
 647 001c DBB2     		uxtb	r3, r3
 648 001e 1370     		strb	r3, [r2]
1094:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_HOST_FIFO_CLR;
 649              		.loc 1 1094 0
 650 0020 1378     		ldrb	r3, [r2]
 651 0022 0321     		movs	r1, #3
 652 0024 8B43     		bics	r3, r1
 653 0026 1370     		strb	r3, [r2]
1095:Generated_Source\PSoC4/SPIS_HOST.c **** 
1096:Generated_Source\PSoC4/SPIS_HOST.c ****     #else
1097:Generated_Source\PSoC4/SPIS_HOST.c **** 
1098:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Clear TX FIFO */
1099:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_HOST_FIFO_CLR;
1100:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_HOST_FIFO_CLR;
1101:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_TX_AUX_CONTROL_DP1_REG |= (uint8)SPIS_HOST_FIFO_CLR;
1102:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_TX_AUX_CONTROL_DP1_REG &= (uint8)~SPIS_HOST_FIFO_CLR;
1103:Generated_Source\PSoC4/SPIS_HOST.c **** 
1104:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_DATA_WIDTH <= 8u */
1105:Generated_Source\PSoC4/SPIS_HOST.c **** 
1106:Generated_Source\PSoC4/SPIS_HOST.c ****     CyExitCriticalSection(enableInterrupts);
 654              		.loc 1 1106 0
 655 0028 FFF7FEFF 		bl	CyExitCriticalSection
 656              	.LVL31:
1107:Generated_Source\PSoC4/SPIS_HOST.c **** }
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 32


 657              		.loc 1 1107 0
 658              		@ sp needed
 659 002c 10BD     		pop	{r4, pc}
 660              	.L59:
 661 002e C046     		.align	2
 662              	.L58:
 663 0030 50000F40 		.word	1074724944
 664 0034 60000F40 		.word	1074724960
 665 0038 90000F40 		.word	1074725008
 666              		.cfi_endproc
 667              	.LFE21:
 668              		.size	SPIS_HOST_ClearFIFO, .-SPIS_HOST_ClearFIFO
 669              		.section	.text.SPIS_HOST_Init,"ax",%progbits
 670              		.align	2
 671              		.global	SPIS_HOST_Init
 672              		.code	16
 673              		.thumb_func
 674              		.type	SPIS_HOST_Init, %function
 675              	SPIS_HOST_Init:
 676              	.LFB1:
  68:Generated_Source\PSoC4/SPIS_HOST.c ****     /*Initialize the Bit counter */
 677              		.loc 1 68 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 0
 680              		@ frame_needed = 0, uses_anonymous_args = 0
 681 0000 10B5     		push	{r4, lr}
 682              		.cfi_def_cfa_offset 8
 683              		.cfi_offset 4, -8
 684              		.cfi_offset 14, -4
  70:Generated_Source\PSoC4/SPIS_HOST.c **** 
 685              		.loc 1 70 0
 686 0002 0722     		movs	r2, #7
 687 0004 064B     		ldr	r3, .L61
 688 0006 1A70     		strb	r2, [r3]
  98:Generated_Source\PSoC4/SPIS_HOST.c **** 
 689              		.loc 1 98 0
 690 0008 FFF7FEFF 		bl	SPIS_HOST_ClearFIFO
 691              	.LVL32:
 112:Generated_Source\PSoC4/SPIS_HOST.c ****     (void) SPIS_HOST_ReadRxStatus(); /* Clear any pending status bits */
 692              		.loc 1 112 0
 693 000c FFF7FEFF 		bl	SPIS_HOST_ReadTxStatus
 694              	.LVL33:
 113:Generated_Source\PSoC4/SPIS_HOST.c **** 
 695              		.loc 1 113 0
 696 0010 FFF7FEFF 		bl	SPIS_HOST_ReadRxStatus
 697              	.LVL34:
 121:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_TX_SOFTWARE_BUF_ENABLED */
 698              		.loc 1 121 0
 699 0014 0023     		movs	r3, #0
 700 0016 034A     		ldr	r2, .L61+4
 701 0018 1370     		strb	r3, [r2]
 124:Generated_Source\PSoC4/SPIS_HOST.c **** }
 702              		.loc 1 124 0
 703 001a 034A     		ldr	r2, .L61+8
 704 001c 1370     		strb	r3, [r2]
 125:Generated_Source\PSoC4/SPIS_HOST.c **** 
 705              		.loc 1 125 0
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 33


 706              		@ sp needed
 707 001e 10BD     		pop	{r4, pc}
 708              	.L62:
 709              		.align	2
 710              	.L61:
 711 0020 84000F40 		.word	1074724996
 712 0024 81000F40 		.word	1074724993
 713 0028 80000F40 		.word	1074724992
 714              		.cfi_endproc
 715              	.LFE1:
 716              		.size	SPIS_HOST_Init, .-SPIS_HOST_Init
 717              		.section	.text.SPIS_HOST_Start,"ax",%progbits
 718              		.align	2
 719              		.global	SPIS_HOST_Start
 720              		.code	16
 721              		.thumb_func
 722              		.type	SPIS_HOST_Start, %function
 723              	SPIS_HOST_Start:
 724              	.LFB3:
 188:Generated_Source\PSoC4/SPIS_HOST.c ****     if(SPIS_HOST_initVar == 0u)
 725              		.loc 1 188 0
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 0
 728              		@ frame_needed = 0, uses_anonymous_args = 0
 729 0000 10B5     		push	{r4, lr}
 730              		.cfi_def_cfa_offset 8
 731              		.cfi_offset 4, -8
 732              		.cfi_offset 14, -4
 189:Generated_Source\PSoC4/SPIS_HOST.c ****     {
 733              		.loc 1 189 0
 734 0002 064B     		ldr	r3, .L65
 735 0004 1B78     		ldrb	r3, [r3]
 736 0006 002B     		cmp	r3, #0
 737 0008 04D1     		bne	.L64
 191:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_initVar = 1u;
 738              		.loc 1 191 0
 739 000a FFF7FEFF 		bl	SPIS_HOST_Init
 740              	.LVL35:
 192:Generated_Source\PSoC4/SPIS_HOST.c ****     }
 741              		.loc 1 192 0
 742 000e 0122     		movs	r2, #1
 743 0010 024B     		ldr	r3, .L65
 744 0012 1A70     		strb	r2, [r3]
 745              	.L64:
 195:Generated_Source\PSoC4/SPIS_HOST.c **** }
 746              		.loc 1 195 0
 747 0014 FFF7FEFF 		bl	SPIS_HOST_Enable
 748              	.LVL36:
 196:Generated_Source\PSoC4/SPIS_HOST.c **** 
 749              		.loc 1 196 0
 750              		@ sp needed
 751 0018 10BD     		pop	{r4, pc}
 752              	.L66:
 753 001a C046     		.align	2
 754              	.L65:
 755 001c 00000000 		.word	.LANCHOR0
 756              		.cfi_endproc
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 34


 757              	.LFE3:
 758              		.size	SPIS_HOST_Start, .-SPIS_HOST_Start
 759              		.section	.text.SPIS_HOST_EnableInt,"ax",%progbits
 760              		.align	2
 761              		.global	SPIS_HOST_EnableInt
 762              		.code	16
 763              		.thumb_func
 764              		.type	SPIS_HOST_EnableInt, %function
 765              	SPIS_HOST_EnableInt:
 766              	.LFB22:
1108:Generated_Source\PSoC4/SPIS_HOST.c **** 
1109:Generated_Source\PSoC4/SPIS_HOST.c **** 
1110:Generated_Source\PSoC4/SPIS_HOST.c **** /* Following functions are for version Compatibility, they are obsolete.
1111:Generated_Source\PSoC4/SPIS_HOST.c **** *  Please do not use it in new projects.
1112:Generated_Source\PSoC4/SPIS_HOST.c **** */
1113:Generated_Source\PSoC4/SPIS_HOST.c **** 
1114:Generated_Source\PSoC4/SPIS_HOST.c **** 
1115:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
1116:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_EnableInt
1117:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
1118:Generated_Source\PSoC4/SPIS_HOST.c **** *
1119:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
1120:Generated_Source\PSoC4/SPIS_HOST.c **** *  Enable internal interrupt generation.
1121:Generated_Source\PSoC4/SPIS_HOST.c **** *
1122:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
1123:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
1124:Generated_Source\PSoC4/SPIS_HOST.c **** *
1125:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
1126:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
1127:Generated_Source\PSoC4/SPIS_HOST.c **** *
1128:Generated_Source\PSoC4/SPIS_HOST.c **** * Theory:
1129:Generated_Source\PSoC4/SPIS_HOST.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1130:Generated_Source\PSoC4/SPIS_HOST.c **** *
1131:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
1132:Generated_Source\PSoC4/SPIS_HOST.c **** void SPIS_HOST_EnableInt(void) 
1133:Generated_Source\PSoC4/SPIS_HOST.c **** {
 767              		.loc 1 1133 0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 0, uses_anonymous_args = 0
 771              		@ link register save eliminated.
1134:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_INTERNAL_TX_INT_ENABLED)
1135:Generated_Source\PSoC4/SPIS_HOST.c ****         CyIntEnable(SPIS_HOST_TX_ISR_NUMBER);
1136:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_INTERNAL_TX_INT_ENABLED */
1137:Generated_Source\PSoC4/SPIS_HOST.c **** 
1138:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_INTERNAL_RX_INT_ENABLED)
1139:Generated_Source\PSoC4/SPIS_HOST.c ****         CyIntEnable(SPIS_HOST_RX_ISR_NUMBER);
1140:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_INTERNAL_RX_INT_ENABLED */
1141:Generated_Source\PSoC4/SPIS_HOST.c **** }
 772              		.loc 1 1141 0
 773              		@ sp needed
 774 0000 7047     		bx	lr
 775              		.cfi_endproc
 776              	.LFE22:
 777              		.size	SPIS_HOST_EnableInt, .-SPIS_HOST_EnableInt
 778 0002 C046     		.section	.text.SPIS_HOST_DisableInt,"ax",%progbits
 779              		.align	2
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 35


 780              		.global	SPIS_HOST_DisableInt
 781              		.code	16
 782              		.thumb_func
 783              		.type	SPIS_HOST_DisableInt, %function
 784              	SPIS_HOST_DisableInt:
 785              	.LFB23:
1142:Generated_Source\PSoC4/SPIS_HOST.c **** 
1143:Generated_Source\PSoC4/SPIS_HOST.c **** 
1144:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
1145:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_DisableInt
1146:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
1147:Generated_Source\PSoC4/SPIS_HOST.c **** *
1148:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
1149:Generated_Source\PSoC4/SPIS_HOST.c **** *  Disable internal interrupt generation.
1150:Generated_Source\PSoC4/SPIS_HOST.c **** *
1151:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
1152:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
1153:Generated_Source\PSoC4/SPIS_HOST.c **** *
1154:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
1155:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
1156:Generated_Source\PSoC4/SPIS_HOST.c **** *
1157:Generated_Source\PSoC4/SPIS_HOST.c **** * Theory:
1158:Generated_Source\PSoC4/SPIS_HOST.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1159:Generated_Source\PSoC4/SPIS_HOST.c **** *
1160:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
1161:Generated_Source\PSoC4/SPIS_HOST.c **** void SPIS_HOST_DisableInt(void) 
1162:Generated_Source\PSoC4/SPIS_HOST.c **** {
 786              		.loc 1 1162 0
 787              		.cfi_startproc
 788              		@ args = 0, pretend = 0, frame = 0
 789              		@ frame_needed = 0, uses_anonymous_args = 0
 790              		@ link register save eliminated.
1163:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_INTERNAL_TX_INT_ENABLED)
1164:Generated_Source\PSoC4/SPIS_HOST.c ****         CyIntDisable(SPIS_HOST_TX_ISR_NUMBER);
1165:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_INTERNAL_TX_INT_ENABLED */
1166:Generated_Source\PSoC4/SPIS_HOST.c **** 
1167:Generated_Source\PSoC4/SPIS_HOST.c ****     #if(SPIS_HOST_INTERNAL_RX_INT_ENABLED)
1168:Generated_Source\PSoC4/SPIS_HOST.c ****         CyIntDisable(SPIS_HOST_RX_ISR_NUMBER);
1169:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* SPIS_HOST_INTERNAL_RX_INT_ENABLED */
1170:Generated_Source\PSoC4/SPIS_HOST.c **** }
 791              		.loc 1 1170 0
 792              		@ sp needed
 793 0000 7047     		bx	lr
 794              		.cfi_endproc
 795              	.LFE23:
 796              		.size	SPIS_HOST_DisableInt, .-SPIS_HOST_DisableInt
 797 0002 C046     		.section	.text.SPIS_HOST_SetInterruptMode,"ax",%progbits
 798              		.align	2
 799              		.global	SPIS_HOST_SetInterruptMode
 800              		.code	16
 801              		.thumb_func
 802              		.type	SPIS_HOST_SetInterruptMode, %function
 803              	SPIS_HOST_SetInterruptMode:
 804              	.LFB24:
1171:Generated_Source\PSoC4/SPIS_HOST.c **** 
1172:Generated_Source\PSoC4/SPIS_HOST.c **** 
1173:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 36


1174:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_SetInterruptMode
1175:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
1176:Generated_Source\PSoC4/SPIS_HOST.c **** *
1177:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
1178:Generated_Source\PSoC4/SPIS_HOST.c **** *  Configure which status bits trigger an interrupt event.
1179:Generated_Source\PSoC4/SPIS_HOST.c **** *
1180:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
1181:Generated_Source\PSoC4/SPIS_HOST.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1182:Generated_Source\PSoC4/SPIS_HOST.c **** *  header file).
1183:Generated_Source\PSoC4/SPIS_HOST.c **** *
1184:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
1185:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
1186:Generated_Source\PSoC4/SPIS_HOST.c **** *
1187:Generated_Source\PSoC4/SPIS_HOST.c **** * Theory:
1188:Generated_Source\PSoC4/SPIS_HOST.c **** *  Enables the output of specific status bits to the interrupt controller.
1189:Generated_Source\PSoC4/SPIS_HOST.c **** *
1190:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
1191:Generated_Source\PSoC4/SPIS_HOST.c **** void SPIS_HOST_SetInterruptMode(uint8 intSrc) 
1192:Generated_Source\PSoC4/SPIS_HOST.c **** {
 805              		.loc 1 1192 0
 806              		.cfi_startproc
 807              		@ args = 0, pretend = 0, frame = 0
 808              		@ frame_needed = 0, uses_anonymous_args = 0
 809              		@ link register save eliminated.
 810              	.LVL37:
1193:Generated_Source\PSoC4/SPIS_HOST.c ****     SPIS_HOST_TX_STATUS_MASK_REG  = intSrc;
 811              		.loc 1 1193 0
 812 0000 024B     		ldr	r3, .L70
 813 0002 1870     		strb	r0, [r3]
1194:Generated_Source\PSoC4/SPIS_HOST.c ****     SPIS_HOST_RX_STATUS_MASK_REG  = intSrc;
 814              		.loc 1 1194 0
 815 0004 024B     		ldr	r3, .L70+4
 816 0006 1870     		strb	r0, [r3]
1195:Generated_Source\PSoC4/SPIS_HOST.c **** }
 817              		.loc 1 1195 0
 818              		@ sp needed
 819 0008 7047     		bx	lr
 820              	.L71:
 821 000a C046     		.align	2
 822              	.L70:
 823 000c 81000F40 		.word	1074724993
 824 0010 80000F40 		.word	1074724992
 825              		.cfi_endproc
 826              	.LFE24:
 827              		.size	SPIS_HOST_SetInterruptMode, .-SPIS_HOST_SetInterruptMode
 828              		.section	.text.SPIS_HOST_ReadStatus,"ax",%progbits
 829              		.align	2
 830              		.global	SPIS_HOST_ReadStatus
 831              		.code	16
 832              		.thumb_func
 833              		.type	SPIS_HOST_ReadStatus, %function
 834              	SPIS_HOST_ReadStatus:
 835              	.LFB25:
1196:Generated_Source\PSoC4/SPIS_HOST.c **** 
1197:Generated_Source\PSoC4/SPIS_HOST.c **** 
1198:Generated_Source\PSoC4/SPIS_HOST.c **** /*******************************************************************************
1199:Generated_Source\PSoC4/SPIS_HOST.c **** * Function Name: SPIS_HOST_ReadStatus
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 37


1200:Generated_Source\PSoC4/SPIS_HOST.c **** ********************************************************************************
1201:Generated_Source\PSoC4/SPIS_HOST.c **** *
1202:Generated_Source\PSoC4/SPIS_HOST.c **** * Summary:
1203:Generated_Source\PSoC4/SPIS_HOST.c **** *  Read the status register for the component.
1204:Generated_Source\PSoC4/SPIS_HOST.c **** *
1205:Generated_Source\PSoC4/SPIS_HOST.c **** * Parameters:
1206:Generated_Source\PSoC4/SPIS_HOST.c **** *  None.
1207:Generated_Source\PSoC4/SPIS_HOST.c **** *
1208:Generated_Source\PSoC4/SPIS_HOST.c **** * Return:
1209:Generated_Source\PSoC4/SPIS_HOST.c **** *  Contents of the status register.
1210:Generated_Source\PSoC4/SPIS_HOST.c **** *
1211:Generated_Source\PSoC4/SPIS_HOST.c **** * Global variables:
1212:Generated_Source\PSoC4/SPIS_HOST.c **** *  SPIS_HOST_swStatus - used to store in software status register,
1213:Generated_Source\PSoC4/SPIS_HOST.c **** *  modified every function call - resets to zero.
1214:Generated_Source\PSoC4/SPIS_HOST.c **** *
1215:Generated_Source\PSoC4/SPIS_HOST.c **** * Theory:
1216:Generated_Source\PSoC4/SPIS_HOST.c **** *  Allows the user and the API to read the status register for error detection
1217:Generated_Source\PSoC4/SPIS_HOST.c **** *  and flow control.
1218:Generated_Source\PSoC4/SPIS_HOST.c **** *
1219:Generated_Source\PSoC4/SPIS_HOST.c **** * Side Effects:
1220:Generated_Source\PSoC4/SPIS_HOST.c **** *  Clear status register of the component.
1221:Generated_Source\PSoC4/SPIS_HOST.c **** *
1222:Generated_Source\PSoC4/SPIS_HOST.c **** * Reentrant:
1223:Generated_Source\PSoC4/SPIS_HOST.c **** *  No.
1224:Generated_Source\PSoC4/SPIS_HOST.c **** *
1225:Generated_Source\PSoC4/SPIS_HOST.c **** *******************************************************************************/
1226:Generated_Source\PSoC4/SPIS_HOST.c **** uint8 SPIS_HOST_ReadStatus(void) 
1227:Generated_Source\PSoC4/SPIS_HOST.c **** {
 836              		.loc 1 1227 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 0
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840              		@ link register save eliminated.
1228:Generated_Source\PSoC4/SPIS_HOST.c ****     uint8 tmpStatus;
1229:Generated_Source\PSoC4/SPIS_HOST.c **** 
1230:Generated_Source\PSoC4/SPIS_HOST.c ****     #if ((SPIS_HOST_TX_SOFTWARE_BUF_ENABLED) || (SPIS_HOST_RX_SOFTWARE_BUF_ENABLED))
1231:Generated_Source\PSoC4/SPIS_HOST.c **** 
1232:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_DisableInt();
1233:Generated_Source\PSoC4/SPIS_HOST.c **** 
1234:Generated_Source\PSoC4/SPIS_HOST.c ****         tmpStatus = SPIS_HOST_GET_STATUS_TX(SPIS_HOST_swStatusTx) |
1235:Generated_Source\PSoC4/SPIS_HOST.c ****               (SPIS_HOST_GET_STATUS_RX(SPIS_HOST_swStatusRx) & (uint8)~SPIS_HOST_STS_RX_FIFO_FULL);
1236:Generated_Source\PSoC4/SPIS_HOST.c **** 
1237:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_swStatusTx = 0u;
1238:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_swStatusRx = 0u;
1239:Generated_Source\PSoC4/SPIS_HOST.c **** 
1240:Generated_Source\PSoC4/SPIS_HOST.c ****         /* Enable Interrupts */
1241:Generated_Source\PSoC4/SPIS_HOST.c ****         SPIS_HOST_EnableInt();
1242:Generated_Source\PSoC4/SPIS_HOST.c **** 
1243:Generated_Source\PSoC4/SPIS_HOST.c ****     #else /* !((SPIS_HOST_TX_SOFTWARE_BUF_ENABLED) || (SPIS_HOST_RX_SOFTWARE_BUF_ENABLED)) */
1244:Generated_Source\PSoC4/SPIS_HOST.c **** 
1245:Generated_Source\PSoC4/SPIS_HOST.c ****         tmpStatus = SPIS_HOST_TX_STATUS_REG | (SPIS_HOST_RX_STATUS_REG &
 841              		.loc 1 1245 0
 842 0000 034B     		ldr	r3, .L73
 843 0002 1B78     		ldrb	r3, [r3]
 844 0004 034A     		ldr	r2, .L73+4
 845 0006 1078     		ldrb	r0, [r2]
 846 0008 4022     		movs	r2, #64
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 38


 847 000a 9043     		bics	r0, r2
 848 000c 1843     		orrs	r0, r3
 849              	.LVL38:
1246:Generated_Source\PSoC4/SPIS_HOST.c ****                                                       (uint8)~SPIS_HOST_STS_RX_FIFO_FULL);
1247:Generated_Source\PSoC4/SPIS_HOST.c **** 
1248:Generated_Source\PSoC4/SPIS_HOST.c ****     #endif /* (SPIS_HOST_TX_SOFTWARE_BUF_ENABLED) || (SPIS_HOST_RX_SOFTWARE_BUF_ENABLED) */
1249:Generated_Source\PSoC4/SPIS_HOST.c **** 
1250:Generated_Source\PSoC4/SPIS_HOST.c ****     return(tmpStatus);
1251:Generated_Source\PSoC4/SPIS_HOST.c **** }
 850              		.loc 1 1251 0
 851              		@ sp needed
 852 000e 7047     		bx	lr
 853              	.L74:
 854              		.align	2
 855              	.L73:
 856 0010 61000F40 		.word	1074724961
 857 0014 60000F40 		.word	1074724960
 858              		.cfi_endproc
 859              	.LFE25:
 860              		.size	SPIS_HOST_ReadStatus, .-SPIS_HOST_ReadStatus
 861              		.comm	SPIS_HOST_swStatusRx,1,1
 862              		.comm	SPIS_HOST_swStatusTx,1,1
 863              		.global	SPIS_HOST_initVar
 864              		.bss
 865              		.set	.LANCHOR0,. + 0
 866              		.type	SPIS_HOST_initVar, %object
 867              		.size	SPIS_HOST_initVar, 1
 868              	SPIS_HOST_initVar:
 869 0000 00       		.space	1
 870              		.text
 871              	.Letext0:
 872              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 873              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 874              		.section	.debug_info,"",%progbits
 875              	.Ldebug_info0:
 876 0000 B3040000 		.4byte	0x4b3
 877 0004 0400     		.2byte	0x4
 878 0006 00000000 		.4byte	.Ldebug_abbrev0
 879 000a 04       		.byte	0x4
 880 000b 01       		.uleb128 0x1
 881 000c D4020000 		.4byte	.LASF56
 882 0010 0C       		.byte	0xc
 883 0011 0E000000 		.4byte	.LASF57
 884 0015 90000000 		.4byte	.LASF58
 885 0019 00000000 		.4byte	.Ldebug_ranges0+0
 886 001d 00000000 		.4byte	0
 887 0021 00000000 		.4byte	.Ldebug_line0
 888 0025 02       		.uleb128 0x2
 889 0026 01       		.byte	0x1
 890 0027 06       		.byte	0x6
 891 0028 4F040000 		.4byte	.LASF0
 892 002c 02       		.uleb128 0x2
 893 002d 01       		.byte	0x1
 894 002e 08       		.byte	0x8
 895 002f F8010000 		.4byte	.LASF1
 896 0033 02       		.uleb128 0x2
 897 0034 02       		.byte	0x2
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 39


 898 0035 05       		.byte	0x5
 899 0036 D3030000 		.4byte	.LASF2
 900 003a 02       		.uleb128 0x2
 901 003b 02       		.byte	0x2
 902 003c 07       		.byte	0x7
 903 003d 5B040000 		.4byte	.LASF3
 904 0041 02       		.uleb128 0x2
 905 0042 04       		.byte	0x4
 906 0043 05       		.byte	0x5
 907 0044 87000000 		.4byte	.LASF4
 908 0048 02       		.uleb128 0x2
 909 0049 04       		.byte	0x4
 910 004a 07       		.byte	0x7
 911 004b 86010000 		.4byte	.LASF5
 912 004f 02       		.uleb128 0x2
 913 0050 08       		.byte	0x8
 914 0051 05       		.byte	0x5
 915 0052 00000000 		.4byte	.LASF6
 916 0056 02       		.uleb128 0x2
 917 0057 08       		.byte	0x8
 918 0058 07       		.byte	0x7
 919 0059 3B010000 		.4byte	.LASF7
 920 005d 03       		.uleb128 0x3
 921 005e 04       		.byte	0x4
 922 005f 05       		.byte	0x5
 923 0060 696E7400 		.ascii	"int\000"
 924 0064 02       		.uleb128 0x2
 925 0065 04       		.byte	0x4
 926 0066 07       		.byte	0x7
 927 0067 55020000 		.4byte	.LASF8
 928 006b 04       		.uleb128 0x4
 929 006c 98010000 		.4byte	.LASF12
 930 0070 02       		.byte	0x2
 931 0071 FB01     		.2byte	0x1fb
 932 0073 2C000000 		.4byte	0x2c
 933 0077 02       		.uleb128 0x2
 934 0078 04       		.byte	0x4
 935 0079 04       		.byte	0x4
 936 007a 35010000 		.4byte	.LASF9
 937 007e 02       		.uleb128 0x2
 938 007f 08       		.byte	0x8
 939 0080 04       		.byte	0x4
 940 0081 06020000 		.4byte	.LASF10
 941 0085 02       		.uleb128 0x2
 942 0086 01       		.byte	0x1
 943 0087 08       		.byte	0x8
 944 0088 B3030000 		.4byte	.LASF11
 945 008c 04       		.uleb128 0x4
 946 008d 81010000 		.4byte	.LASF13
 947 0091 02       		.byte	0x2
 948 0092 A502     		.2byte	0x2a5
 949 0094 98000000 		.4byte	0x98
 950 0098 05       		.uleb128 0x5
 951 0099 6B000000 		.4byte	0x6b
 952 009d 02       		.uleb128 0x2
 953 009e 08       		.byte	0x8
 954 009f 04       		.byte	0x4
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 40


 955 00a0 7D030000 		.4byte	.LASF14
 956 00a4 02       		.uleb128 0x2
 957 00a5 04       		.byte	0x4
 958 00a6 07       		.byte	0x7
 959 00a7 89030000 		.4byte	.LASF15
 960 00ab 06       		.uleb128 0x6
 961 00ac DD030000 		.4byte	.LASF16
 962 00b0 01       		.byte	0x1
 963 00b1 8E       		.byte	0x8e
 964 00b2 00000000 		.4byte	.LFB2
 965 00b6 3C000000 		.4byte	.LFE2-.LFB2
 966 00ba 01       		.uleb128 0x1
 967 00bb 9C       		.byte	0x9c
 968 00bc E2000000 		.4byte	0xe2
 969 00c0 07       		.uleb128 0x7
 970 00c1 D2010000 		.4byte	.LASF18
 971 00c5 01       		.byte	0x1
 972 00c6 90       		.byte	0x90
 973 00c7 6B000000 		.4byte	0x6b
 974 00cb 00000000 		.4byte	.LLST0
 975 00cf 08       		.uleb128 0x8
 976 00d0 06000000 		.4byte	.LVL0
 977 00d4 A0040000 		.4byte	0x4a0
 978 00d8 08       		.uleb128 0x8
 979 00d9 2C000000 		.4byte	.LVL1
 980 00dd AB040000 		.4byte	0x4ab
 981 00e1 00       		.byte	0
 982 00e2 06       		.uleb128 0x6
 983 00e3 7C020000 		.4byte	.LASF17
 984 00e7 01       		.byte	0x1
 985 00e8 D8       		.byte	0xd8
 986 00e9 00000000 		.4byte	.LFB4
 987 00ed 28000000 		.4byte	.LFE4-.LFB4
 988 00f1 01       		.uleb128 0x1
 989 00f2 9C       		.byte	0x9c
 990 00f3 19010000 		.4byte	0x119
 991 00f7 07       		.uleb128 0x7
 992 00f8 D2010000 		.4byte	.LASF18
 993 00fc 01       		.byte	0x1
 994 00fd DA       		.byte	0xda
 995 00fe 6B000000 		.4byte	0x6b
 996 0102 13000000 		.4byte	.LLST1
 997 0106 08       		.uleb128 0x8
 998 0107 06000000 		.4byte	.LVL2
 999 010b A0040000 		.4byte	0x4a0
 1000 010f 08       		.uleb128 0x8
 1001 0110 1C000000 		.4byte	.LVL3
 1002 0114 AB040000 		.4byte	0x4ab
 1003 0118 00       		.byte	0
 1004 0119 09       		.uleb128 0x9
 1005 011a 92030000 		.4byte	.LASF19
 1006 011e 01       		.byte	0x1
 1007 011f FD       		.byte	0xfd
 1008 0120 00000000 		.4byte	.LFB5
 1009 0124 02000000 		.4byte	.LFE5-.LFB5
 1010 0128 01       		.uleb128 0x1
 1011 0129 9C       		.byte	0x9c
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 41


 1012 012a 0A       		.uleb128 0xa
 1013 012b FB000000 		.4byte	.LASF20
 1014 012f 01       		.byte	0x1
 1015 0130 1601     		.2byte	0x116
 1016 0132 00000000 		.4byte	.LFB6
 1017 0136 02000000 		.4byte	.LFE6-.LFB6
 1018 013a 01       		.uleb128 0x1
 1019 013b 9C       		.byte	0x9c
 1020 013c 0A       		.uleb128 0xa
 1021 013d 6A010000 		.4byte	.LASF21
 1022 0141 01       		.byte	0x1
 1023 0142 2F01     		.2byte	0x12f
 1024 0144 00000000 		.4byte	.LFB7
 1025 0148 02000000 		.4byte	.LFE7-.LFB7
 1026 014c 01       		.uleb128 0x1
 1027 014d 9C       		.byte	0x9c
 1028 014e 0A       		.uleb128 0xa
 1029 014f F5030000 		.4byte	.LASF22
 1030 0153 01       		.byte	0x1
 1031 0154 4801     		.2byte	0x148
 1032 0156 00000000 		.4byte	.LFB8
 1033 015a 02000000 		.4byte	.LFE8-.LFB8
 1034 015e 01       		.uleb128 0x1
 1035 015f 9C       		.byte	0x9c
 1036 0160 0B       		.uleb128 0xb
 1037 0161 31000000 		.4byte	.LASF23
 1038 0165 01       		.byte	0x1
 1039 0166 6201     		.2byte	0x162
 1040 0168 00000000 		.4byte	.LFB9
 1041 016c 0C000000 		.4byte	.LFE9-.LFB9
 1042 0170 01       		.uleb128 0x1
 1043 0171 9C       		.byte	0x9c
 1044 0172 85010000 		.4byte	0x185
 1045 0176 0C       		.uleb128 0xc
 1046 0177 0D020000 		.4byte	.LASF25
 1047 017b 01       		.byte	0x1
 1048 017c 6201     		.2byte	0x162
 1049 017e 6B000000 		.4byte	0x6b
 1050 0182 01       		.uleb128 0x1
 1051 0183 50       		.byte	0x50
 1052 0184 00       		.byte	0
 1053 0185 0B       		.uleb128 0xb
 1054 0186 4E000000 		.4byte	.LASF24
 1055 018a 01       		.byte	0x1
 1056 018b 7A01     		.2byte	0x17a
 1057 018d 00000000 		.4byte	.LFB10
 1058 0191 0C000000 		.4byte	.LFE10-.LFB10
 1059 0195 01       		.uleb128 0x1
 1060 0196 9C       		.byte	0x9c
 1061 0197 AA010000 		.4byte	0x1aa
 1062 019b 0C       		.uleb128 0xc
 1063 019c 0D020000 		.4byte	.LASF25
 1064 01a0 01       		.byte	0x1
 1065 01a1 7A01     		.2byte	0x17a
 1066 01a3 6B000000 		.4byte	0x6b
 1067 01a7 01       		.uleb128 0x1
 1068 01a8 50       		.byte	0x50
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 42


 1069 01a9 00       		.byte	0
 1070 01aa 0D       		.uleb128 0xd
 1071 01ab 38040000 		.4byte	.LASF27
 1072 01af 01       		.byte	0x1
 1073 01b0 9C01     		.2byte	0x19c
 1074 01b2 6B000000 		.4byte	0x6b
 1075 01b6 00000000 		.4byte	.LFB11
 1076 01ba 0C000000 		.4byte	.LFE11-.LFB11
 1077 01be 01       		.uleb128 0x1
 1078 01bf 9C       		.byte	0x9c
 1079 01c0 D3010000 		.4byte	0x1d3
 1080 01c4 0E       		.uleb128 0xe
 1081 01c5 2E040000 		.4byte	.LASF26
 1082 01c9 01       		.byte	0x1
 1083 01ca 9E01     		.2byte	0x19e
 1084 01cc 6B000000 		.4byte	0x6b
 1085 01d0 01       		.uleb128 0x1
 1086 01d1 50       		.byte	0x50
 1087 01d2 00       		.byte	0
 1088 01d3 0D       		.uleb128 0xd
 1089 01d4 A1020000 		.4byte	.LASF28
 1090 01d8 01       		.byte	0x1
 1091 01d9 D101     		.2byte	0x1d1
 1092 01db 6B000000 		.4byte	0x6b
 1093 01df 00000000 		.4byte	.LFB12
 1094 01e3 0C000000 		.4byte	.LFE12-.LFB12
 1095 01e7 01       		.uleb128 0x1
 1096 01e8 9C       		.byte	0x9c
 1097 01e9 FC010000 		.4byte	0x1fc
 1098 01ed 0E       		.uleb128 0xe
 1099 01ee 2E040000 		.4byte	.LASF26
 1100 01f2 01       		.byte	0x1
 1101 01f3 D301     		.2byte	0x1d3
 1102 01f5 6B000000 		.4byte	0x6b
 1103 01f9 01       		.uleb128 0x1
 1104 01fa 50       		.byte	0x50
 1105 01fb 00       		.byte	0
 1106 01fc 0B       		.uleb128 0xb
 1107 01fd 9E010000 		.4byte	.LASF29
 1108 0201 01       		.byte	0x1
 1109 0202 0C02     		.2byte	0x20c
 1110 0204 00000000 		.4byte	.LFB13
 1111 0208 18000000 		.4byte	.LFE13-.LFB13
 1112 020c 01       		.uleb128 0x1
 1113 020d 9C       		.byte	0x9c
 1114 020e 21020000 		.4byte	0x221
 1115 0212 0C       		.uleb128 0xc
 1116 0213 80000000 		.4byte	.LASF30
 1117 0217 01       		.byte	0x1
 1118 0218 0C02     		.2byte	0x20c
 1119 021a 6B000000 		.4byte	0x6b
 1120 021e 01       		.uleb128 0x1
 1121 021f 50       		.byte	0x50
 1122 0220 00       		.byte	0
 1123 0221 0B       		.uleb128 0xb
 1124 0222 C7000000 		.4byte	.LASF31
 1125 0226 01       		.byte	0x1
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 43


 1126 0227 6B02     		.2byte	0x26b
 1127 0229 00000000 		.4byte	.LFB14
 1128 022d 0C000000 		.4byte	.LFE14-.LFB14
 1129 0231 01       		.uleb128 0x1
 1130 0232 9C       		.byte	0x9c
 1131 0233 46020000 		.4byte	0x246
 1132 0237 0C       		.uleb128 0xc
 1133 0238 A8030000 		.4byte	.LASF32
 1134 023c 01       		.byte	0x1
 1135 023d 6B02     		.2byte	0x26b
 1136 023f 6B000000 		.4byte	0x6b
 1137 0243 01       		.uleb128 0x1
 1138 0244 50       		.byte	0x50
 1139 0245 00       		.byte	0
 1140 0246 0D       		.uleb128 0xd
 1141 0247 E3010000 		.4byte	.LASF33
 1142 024b 01       		.byte	0x1
 1143 024c 9502     		.2byte	0x295
 1144 024e 6B000000 		.4byte	0x6b
 1145 0252 00000000 		.4byte	.LFB15
 1146 0256 0C000000 		.4byte	.LFE15-.LFB15
 1147 025a 01       		.uleb128 0x1
 1148 025b 9C       		.byte	0x9c
 1149 025c 6F020000 		.4byte	0x26f
 1150 0260 0E       		.uleb128 0xe
 1151 0261 B8030000 		.4byte	.LASF34
 1152 0265 01       		.byte	0x1
 1153 0266 9702     		.2byte	0x297
 1154 0268 6B000000 		.4byte	0x6b
 1155 026c 01       		.uleb128 0x1
 1156 026d 50       		.byte	0x50
 1157 026e 00       		.byte	0
 1158 026f 0D       		.uleb128 0xd
 1159 0270 62020000 		.4byte	.LASF35
 1160 0274 01       		.byte	0x1
 1161 0275 D702     		.2byte	0x2d7
 1162 0277 6B000000 		.4byte	0x6b
 1163 027b 00000000 		.4byte	.LFB16
 1164 027f 14000000 		.4byte	.LFE16-.LFB16
 1165 0283 01       		.uleb128 0x1
 1166 0284 9C       		.byte	0x9c
 1167 0285 98020000 		.4byte	0x298
 1168 0289 0E       		.uleb128 0xe
 1169 028a 6E040000 		.4byte	.LASF36
 1170 028e 01       		.byte	0x1
 1171 028f D902     		.2byte	0x2d9
 1172 0291 6B000000 		.4byte	0x6b
 1173 0295 01       		.uleb128 0x1
 1174 0296 50       		.byte	0x50
 1175 0297 00       		.byte	0
 1176 0298 0D       		.uleb128 0xd
 1177 0299 E1000000 		.4byte	.LASF37
 1178 029d 01       		.byte	0x1
 1179 029e 1803     		.2byte	0x318
 1180 02a0 6B000000 		.4byte	0x6b
 1181 02a4 00000000 		.4byte	.LFB17
 1182 02a8 20000000 		.4byte	.LFE17-.LFB17
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 44


 1183 02ac 01       		.uleb128 0x1
 1184 02ad 9C       		.byte	0x9c
 1185 02ae C3020000 		.4byte	0x2c3
 1186 02b2 0F       		.uleb128 0xf
 1187 02b3 6E040000 		.4byte	.LASF36
 1188 02b7 01       		.byte	0x1
 1189 02b8 1A03     		.2byte	0x31a
 1190 02ba 6B000000 		.4byte	0x6b
 1191 02be 26000000 		.4byte	.LLST2
 1192 02c2 00       		.byte	0
 1193 02c3 0A       		.uleb128 0xa
 1194 02c4 52010000 		.4byte	.LASF38
 1195 02c8 01       		.byte	0x1
 1196 02c9 6A03     		.2byte	0x36a
 1197 02cb 00000000 		.4byte	.LFB18
 1198 02cf 18000000 		.4byte	.LFE18-.LFB18
 1199 02d3 01       		.uleb128 0x1
 1200 02d4 9C       		.byte	0x9c
 1201 02d5 0B       		.uleb128 0xb
 1202 02d6 73040000 		.4byte	.LASF39
 1203 02da 01       		.byte	0x1
 1204 02db A303     		.2byte	0x3a3
 1205 02dd 00000000 		.4byte	.LFB19
 1206 02e1 24000000 		.4byte	.LFE19-.LFB19
 1207 02e5 01       		.uleb128 0x1
 1208 02e6 9C       		.byte	0x9c
 1209 02e7 0E030000 		.4byte	0x30e
 1210 02eb 0F       		.uleb128 0xf
 1211 02ec D2010000 		.4byte	.LASF18
 1212 02f0 01       		.byte	0x1
 1213 02f1 A503     		.2byte	0x3a5
 1214 02f3 6B000000 		.4byte	0x6b
 1215 02f7 4F000000 		.4byte	.LLST3
 1216 02fb 08       		.uleb128 0x8
 1217 02fc 06000000 		.4byte	.LVL17
 1218 0300 A0040000 		.4byte	0x4a0
 1219 0304 08       		.uleb128 0x8
 1220 0305 1E000000 		.4byte	.LVL18
 1221 0309 AB040000 		.4byte	0x4ab
 1222 030d 00       		.byte	0
 1223 030e 0B       		.uleb128 0xb
 1224 030f C1020000 		.4byte	.LASF40
 1225 0313 01       		.byte	0x1
 1226 0314 1704     		.2byte	0x417
 1227 0316 00000000 		.4byte	.LFB20
 1228 031a 1E000000 		.4byte	.LFE20-.LFB20
 1229 031e 01       		.uleb128 0x1
 1230 031f 9C       		.byte	0x9c
 1231 0320 5E030000 		.4byte	0x35e
 1232 0324 10       		.uleb128 0x10
 1233 0325 EE030000 		.4byte	.LASF41
 1234 0329 01       		.byte	0x1
 1235 032a 1704     		.2byte	0x417
 1236 032c 5E030000 		.4byte	0x35e
 1237 0330 62000000 		.4byte	.LLST4
 1238 0334 10       		.uleb128 0x10
 1239 0335 C8010000 		.4byte	.LASF42
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 45


 1240 0339 01       		.byte	0x1
 1241 033a 1704     		.2byte	0x417
 1242 033c 6B000000 		.4byte	0x6b
 1243 0340 8E000000 		.4byte	.LLST5
 1244 0344 0F       		.uleb128 0xf
 1245 0345 B8020000 		.4byte	.LASF43
 1246 0349 01       		.byte	0x1
 1247 034a 1A04     		.2byte	0x41a
 1248 034c 6B000000 		.4byte	0x6b
 1249 0350 B7000000 		.4byte	.LLST6
 1250 0354 08       		.uleb128 0x8
 1251 0355 10000000 		.4byte	.LVL22
 1252 0359 FC010000 		.4byte	0x1fc
 1253 035d 00       		.byte	0
 1254 035e 11       		.uleb128 0x11
 1255 035f 04       		.byte	0x4
 1256 0360 64030000 		.4byte	0x364
 1257 0364 12       		.uleb128 0x12
 1258 0365 6B000000 		.4byte	0x6b
 1259 0369 0B       		.uleb128 0xb
 1260 036a B4010000 		.4byte	.LASF44
 1261 036e 01       		.byte	0x1
 1262 036f 3704     		.2byte	0x437
 1263 0371 00000000 		.4byte	.LFB21
 1264 0375 3C000000 		.4byte	.LFE21-.LFB21
 1265 0379 01       		.uleb128 0x1
 1266 037a 9C       		.byte	0x9c
 1267 037b A2030000 		.4byte	0x3a2
 1268 037f 0F       		.uleb128 0xf
 1269 0380 D2010000 		.4byte	.LASF18
 1270 0384 01       		.byte	0x1
 1271 0385 3904     		.2byte	0x439
 1272 0387 6B000000 		.4byte	0x6b
 1273 038b E1000000 		.4byte	.LLST7
 1274 038f 08       		.uleb128 0x8
 1275 0390 14000000 		.4byte	.LVL30
 1276 0394 A0040000 		.4byte	0x4a0
 1277 0398 08       		.uleb128 0x8
 1278 0399 2C000000 		.4byte	.LVL31
 1279 039d AB040000 		.4byte	0x4ab
 1280 03a1 00       		.byte	0
 1281 03a2 06       		.uleb128 0x6
 1282 03a3 26010000 		.4byte	.LASF45
 1283 03a7 01       		.byte	0x1
 1284 03a8 43       		.byte	0x43
 1285 03a9 00000000 		.4byte	.LFB1
 1286 03ad 2C000000 		.4byte	.LFE1-.LFB1
 1287 03b1 01       		.uleb128 0x1
 1288 03b2 9C       		.byte	0x9c
 1289 03b3 D3030000 		.4byte	0x3d3
 1290 03b7 08       		.uleb128 0x8
 1291 03b8 0C000000 		.4byte	.LVL32
 1292 03bc 69030000 		.4byte	0x369
 1293 03c0 08       		.uleb128 0x8
 1294 03c1 10000000 		.4byte	.LVL33
 1295 03c5 AA010000 		.4byte	0x1aa
 1296 03c9 08       		.uleb128 0x8
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 46


 1297 03ca 14000000 		.4byte	.LVL34
 1298 03ce D3010000 		.4byte	0x1d3
 1299 03d2 00       		.byte	0
 1300 03d3 06       		.uleb128 0x6
 1301 03d4 0C040000 		.4byte	.LASF46
 1302 03d8 01       		.byte	0x1
 1303 03d9 BB       		.byte	0xbb
 1304 03da 00000000 		.4byte	.LFB3
 1305 03de 20000000 		.4byte	.LFE3-.LFB3
 1306 03e2 01       		.uleb128 0x1
 1307 03e3 9C       		.byte	0x9c
 1308 03e4 FB030000 		.4byte	0x3fb
 1309 03e8 08       		.uleb128 0x8
 1310 03e9 0E000000 		.4byte	.LVL35
 1311 03ed A2030000 		.4byte	0x3a2
 1312 03f1 08       		.uleb128 0x8
 1313 03f2 18000000 		.4byte	.LVL36
 1314 03f6 AB000000 		.4byte	0xab
 1315 03fa 00       		.byte	0
 1316 03fb 0A       		.uleb128 0xa
 1317 03fc BF030000 		.4byte	.LASF47
 1318 0400 01       		.byte	0x1
 1319 0401 6C04     		.2byte	0x46c
 1320 0403 00000000 		.4byte	.LFB22
 1321 0407 02000000 		.4byte	.LFE22-.LFB22
 1322 040b 01       		.uleb128 0x1
 1323 040c 9C       		.byte	0x9c
 1324 040d 0A       		.uleb128 0xa
 1325 040e 6B000000 		.4byte	.LASF48
 1326 0412 01       		.byte	0x1
 1327 0413 8904     		.2byte	0x489
 1328 0415 00000000 		.4byte	.LFB23
 1329 0419 02000000 		.4byte	.LFE23-.LFB23
 1330 041d 01       		.uleb128 0x1
 1331 041e 9C       		.byte	0x9c
 1332 041f 0B       		.uleb128 0xb
 1333 0420 62030000 		.4byte	.LASF49
 1334 0424 01       		.byte	0x1
 1335 0425 A704     		.2byte	0x4a7
 1336 0427 00000000 		.4byte	.LFB24
 1337 042b 14000000 		.4byte	.LFE24-.LFB24
 1338 042f 01       		.uleb128 0x1
 1339 0430 9C       		.byte	0x9c
 1340 0431 44040000 		.4byte	0x444
 1341 0435 0C       		.uleb128 0xc
 1342 0436 0D020000 		.4byte	.LASF25
 1343 043a 01       		.byte	0x1
 1344 043b A704     		.2byte	0x4a7
 1345 043d 6B000000 		.4byte	0x6b
 1346 0441 01       		.uleb128 0x1
 1347 0442 50       		.byte	0x50
 1348 0443 00       		.byte	0
 1349 0444 0D       		.uleb128 0xd
 1350 0445 11010000 		.4byte	.LASF50
 1351 0449 01       		.byte	0x1
 1352 044a CA04     		.2byte	0x4ca
 1353 044c 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 47


 1354 0450 00000000 		.4byte	.LFB25
 1355 0454 18000000 		.4byte	.LFE25-.LFB25
 1356 0458 01       		.uleb128 0x1
 1357 0459 9C       		.byte	0x9c
 1358 045a 6D040000 		.4byte	0x46d
 1359 045e 0E       		.uleb128 0xe
 1360 045f 2E040000 		.4byte	.LASF26
 1361 0463 01       		.byte	0x1
 1362 0464 CC04     		.2byte	0x4cc
 1363 0466 6B000000 		.4byte	0x6b
 1364 046a 01       		.uleb128 0x1
 1365 046b 50       		.byte	0x50
 1366 046c 00       		.byte	0
 1367 046d 13       		.uleb128 0x13
 1368 046e 1C040000 		.4byte	.LASF51
 1369 0472 01       		.byte	0x1
 1370 0473 26       		.byte	0x26
 1371 0474 6B000000 		.4byte	0x6b
 1372 0478 05       		.uleb128 0x5
 1373 0479 03       		.byte	0x3
 1374 047a 00000000 		.4byte	SPIS_HOST_initVar
 1375 047e 13       		.uleb128 0x13
 1376 047f 29020000 		.4byte	.LASF52
 1377 0483 01       		.byte	0x1
 1378 0484 28       		.byte	0x28
 1379 0485 98000000 		.4byte	0x98
 1380 0489 05       		.uleb128 0x5
 1381 048a 03       		.byte	0x3
 1382 048b 00000000 		.4byte	SPIS_HOST_swStatusTx
 1383 048f 13       		.uleb128 0x13
 1384 0490 14020000 		.4byte	.LASF53
 1385 0494 01       		.byte	0x1
 1386 0495 29       		.byte	0x29
 1387 0496 98000000 		.4byte	0x98
 1388 049a 05       		.uleb128 0x5
 1389 049b 03       		.byte	0x3
 1390 049c 00000000 		.4byte	SPIS_HOST_swStatusRx
 1391 04a0 14       		.uleb128 0x14
 1392 04a1 3E020000 		.4byte	.LASF54
 1393 04a5 3E020000 		.4byte	.LASF54
 1394 04a9 03       		.byte	0x3
 1395 04aa F8       		.byte	0xf8
 1396 04ab 14       		.uleb128 0x14
 1397 04ac 8B020000 		.4byte	.LASF55
 1398 04b0 8B020000 		.4byte	.LASF55
 1399 04b4 03       		.byte	0x3
 1400 04b5 F9       		.byte	0xf9
 1401 04b6 00       		.byte	0
 1402              		.section	.debug_abbrev,"",%progbits
 1403              	.Ldebug_abbrev0:
 1404 0000 01       		.uleb128 0x1
 1405 0001 11       		.uleb128 0x11
 1406 0002 01       		.byte	0x1
 1407 0003 25       		.uleb128 0x25
 1408 0004 0E       		.uleb128 0xe
 1409 0005 13       		.uleb128 0x13
 1410 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 48


 1411 0007 03       		.uleb128 0x3
 1412 0008 0E       		.uleb128 0xe
 1413 0009 1B       		.uleb128 0x1b
 1414 000a 0E       		.uleb128 0xe
 1415 000b 55       		.uleb128 0x55
 1416 000c 17       		.uleb128 0x17
 1417 000d 11       		.uleb128 0x11
 1418 000e 01       		.uleb128 0x1
 1419 000f 10       		.uleb128 0x10
 1420 0010 17       		.uleb128 0x17
 1421 0011 00       		.byte	0
 1422 0012 00       		.byte	0
 1423 0013 02       		.uleb128 0x2
 1424 0014 24       		.uleb128 0x24
 1425 0015 00       		.byte	0
 1426 0016 0B       		.uleb128 0xb
 1427 0017 0B       		.uleb128 0xb
 1428 0018 3E       		.uleb128 0x3e
 1429 0019 0B       		.uleb128 0xb
 1430 001a 03       		.uleb128 0x3
 1431 001b 0E       		.uleb128 0xe
 1432 001c 00       		.byte	0
 1433 001d 00       		.byte	0
 1434 001e 03       		.uleb128 0x3
 1435 001f 24       		.uleb128 0x24
 1436 0020 00       		.byte	0
 1437 0021 0B       		.uleb128 0xb
 1438 0022 0B       		.uleb128 0xb
 1439 0023 3E       		.uleb128 0x3e
 1440 0024 0B       		.uleb128 0xb
 1441 0025 03       		.uleb128 0x3
 1442 0026 08       		.uleb128 0x8
 1443 0027 00       		.byte	0
 1444 0028 00       		.byte	0
 1445 0029 04       		.uleb128 0x4
 1446 002a 16       		.uleb128 0x16
 1447 002b 00       		.byte	0
 1448 002c 03       		.uleb128 0x3
 1449 002d 0E       		.uleb128 0xe
 1450 002e 3A       		.uleb128 0x3a
 1451 002f 0B       		.uleb128 0xb
 1452 0030 3B       		.uleb128 0x3b
 1453 0031 05       		.uleb128 0x5
 1454 0032 49       		.uleb128 0x49
 1455 0033 13       		.uleb128 0x13
 1456 0034 00       		.byte	0
 1457 0035 00       		.byte	0
 1458 0036 05       		.uleb128 0x5
 1459 0037 35       		.uleb128 0x35
 1460 0038 00       		.byte	0
 1461 0039 49       		.uleb128 0x49
 1462 003a 13       		.uleb128 0x13
 1463 003b 00       		.byte	0
 1464 003c 00       		.byte	0
 1465 003d 06       		.uleb128 0x6
 1466 003e 2E       		.uleb128 0x2e
 1467 003f 01       		.byte	0x1
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 49


 1468 0040 3F       		.uleb128 0x3f
 1469 0041 19       		.uleb128 0x19
 1470 0042 03       		.uleb128 0x3
 1471 0043 0E       		.uleb128 0xe
 1472 0044 3A       		.uleb128 0x3a
 1473 0045 0B       		.uleb128 0xb
 1474 0046 3B       		.uleb128 0x3b
 1475 0047 0B       		.uleb128 0xb
 1476 0048 27       		.uleb128 0x27
 1477 0049 19       		.uleb128 0x19
 1478 004a 11       		.uleb128 0x11
 1479 004b 01       		.uleb128 0x1
 1480 004c 12       		.uleb128 0x12
 1481 004d 06       		.uleb128 0x6
 1482 004e 40       		.uleb128 0x40
 1483 004f 18       		.uleb128 0x18
 1484 0050 9742     		.uleb128 0x2117
 1485 0052 19       		.uleb128 0x19
 1486 0053 01       		.uleb128 0x1
 1487 0054 13       		.uleb128 0x13
 1488 0055 00       		.byte	0
 1489 0056 00       		.byte	0
 1490 0057 07       		.uleb128 0x7
 1491 0058 34       		.uleb128 0x34
 1492 0059 00       		.byte	0
 1493 005a 03       		.uleb128 0x3
 1494 005b 0E       		.uleb128 0xe
 1495 005c 3A       		.uleb128 0x3a
 1496 005d 0B       		.uleb128 0xb
 1497 005e 3B       		.uleb128 0x3b
 1498 005f 0B       		.uleb128 0xb
 1499 0060 49       		.uleb128 0x49
 1500 0061 13       		.uleb128 0x13
 1501 0062 02       		.uleb128 0x2
 1502 0063 17       		.uleb128 0x17
 1503 0064 00       		.byte	0
 1504 0065 00       		.byte	0
 1505 0066 08       		.uleb128 0x8
 1506 0067 898201   		.uleb128 0x4109
 1507 006a 00       		.byte	0
 1508 006b 11       		.uleb128 0x11
 1509 006c 01       		.uleb128 0x1
 1510 006d 31       		.uleb128 0x31
 1511 006e 13       		.uleb128 0x13
 1512 006f 00       		.byte	0
 1513 0070 00       		.byte	0
 1514 0071 09       		.uleb128 0x9
 1515 0072 2E       		.uleb128 0x2e
 1516 0073 00       		.byte	0
 1517 0074 3F       		.uleb128 0x3f
 1518 0075 19       		.uleb128 0x19
 1519 0076 03       		.uleb128 0x3
 1520 0077 0E       		.uleb128 0xe
 1521 0078 3A       		.uleb128 0x3a
 1522 0079 0B       		.uleb128 0xb
 1523 007a 3B       		.uleb128 0x3b
 1524 007b 0B       		.uleb128 0xb
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 50


 1525 007c 27       		.uleb128 0x27
 1526 007d 19       		.uleb128 0x19
 1527 007e 11       		.uleb128 0x11
 1528 007f 01       		.uleb128 0x1
 1529 0080 12       		.uleb128 0x12
 1530 0081 06       		.uleb128 0x6
 1531 0082 40       		.uleb128 0x40
 1532 0083 18       		.uleb128 0x18
 1533 0084 9742     		.uleb128 0x2117
 1534 0086 19       		.uleb128 0x19
 1535 0087 00       		.byte	0
 1536 0088 00       		.byte	0
 1537 0089 0A       		.uleb128 0xa
 1538 008a 2E       		.uleb128 0x2e
 1539 008b 00       		.byte	0
 1540 008c 3F       		.uleb128 0x3f
 1541 008d 19       		.uleb128 0x19
 1542 008e 03       		.uleb128 0x3
 1543 008f 0E       		.uleb128 0xe
 1544 0090 3A       		.uleb128 0x3a
 1545 0091 0B       		.uleb128 0xb
 1546 0092 3B       		.uleb128 0x3b
 1547 0093 05       		.uleb128 0x5
 1548 0094 27       		.uleb128 0x27
 1549 0095 19       		.uleb128 0x19
 1550 0096 11       		.uleb128 0x11
 1551 0097 01       		.uleb128 0x1
 1552 0098 12       		.uleb128 0x12
 1553 0099 06       		.uleb128 0x6
 1554 009a 40       		.uleb128 0x40
 1555 009b 18       		.uleb128 0x18
 1556 009c 9742     		.uleb128 0x2117
 1557 009e 19       		.uleb128 0x19
 1558 009f 00       		.byte	0
 1559 00a0 00       		.byte	0
 1560 00a1 0B       		.uleb128 0xb
 1561 00a2 2E       		.uleb128 0x2e
 1562 00a3 01       		.byte	0x1
 1563 00a4 3F       		.uleb128 0x3f
 1564 00a5 19       		.uleb128 0x19
 1565 00a6 03       		.uleb128 0x3
 1566 00a7 0E       		.uleb128 0xe
 1567 00a8 3A       		.uleb128 0x3a
 1568 00a9 0B       		.uleb128 0xb
 1569 00aa 3B       		.uleb128 0x3b
 1570 00ab 05       		.uleb128 0x5
 1571 00ac 27       		.uleb128 0x27
 1572 00ad 19       		.uleb128 0x19
 1573 00ae 11       		.uleb128 0x11
 1574 00af 01       		.uleb128 0x1
 1575 00b0 12       		.uleb128 0x12
 1576 00b1 06       		.uleb128 0x6
 1577 00b2 40       		.uleb128 0x40
 1578 00b3 18       		.uleb128 0x18
 1579 00b4 9742     		.uleb128 0x2117
 1580 00b6 19       		.uleb128 0x19
 1581 00b7 01       		.uleb128 0x1
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 51


 1582 00b8 13       		.uleb128 0x13
 1583 00b9 00       		.byte	0
 1584 00ba 00       		.byte	0
 1585 00bb 0C       		.uleb128 0xc
 1586 00bc 05       		.uleb128 0x5
 1587 00bd 00       		.byte	0
 1588 00be 03       		.uleb128 0x3
 1589 00bf 0E       		.uleb128 0xe
 1590 00c0 3A       		.uleb128 0x3a
 1591 00c1 0B       		.uleb128 0xb
 1592 00c2 3B       		.uleb128 0x3b
 1593 00c3 05       		.uleb128 0x5
 1594 00c4 49       		.uleb128 0x49
 1595 00c5 13       		.uleb128 0x13
 1596 00c6 02       		.uleb128 0x2
 1597 00c7 18       		.uleb128 0x18
 1598 00c8 00       		.byte	0
 1599 00c9 00       		.byte	0
 1600 00ca 0D       		.uleb128 0xd
 1601 00cb 2E       		.uleb128 0x2e
 1602 00cc 01       		.byte	0x1
 1603 00cd 3F       		.uleb128 0x3f
 1604 00ce 19       		.uleb128 0x19
 1605 00cf 03       		.uleb128 0x3
 1606 00d0 0E       		.uleb128 0xe
 1607 00d1 3A       		.uleb128 0x3a
 1608 00d2 0B       		.uleb128 0xb
 1609 00d3 3B       		.uleb128 0x3b
 1610 00d4 05       		.uleb128 0x5
 1611 00d5 27       		.uleb128 0x27
 1612 00d6 19       		.uleb128 0x19
 1613 00d7 49       		.uleb128 0x49
 1614 00d8 13       		.uleb128 0x13
 1615 00d9 11       		.uleb128 0x11
 1616 00da 01       		.uleb128 0x1
 1617 00db 12       		.uleb128 0x12
 1618 00dc 06       		.uleb128 0x6
 1619 00dd 40       		.uleb128 0x40
 1620 00de 18       		.uleb128 0x18
 1621 00df 9742     		.uleb128 0x2117
 1622 00e1 19       		.uleb128 0x19
 1623 00e2 01       		.uleb128 0x1
 1624 00e3 13       		.uleb128 0x13
 1625 00e4 00       		.byte	0
 1626 00e5 00       		.byte	0
 1627 00e6 0E       		.uleb128 0xe
 1628 00e7 34       		.uleb128 0x34
 1629 00e8 00       		.byte	0
 1630 00e9 03       		.uleb128 0x3
 1631 00ea 0E       		.uleb128 0xe
 1632 00eb 3A       		.uleb128 0x3a
 1633 00ec 0B       		.uleb128 0xb
 1634 00ed 3B       		.uleb128 0x3b
 1635 00ee 05       		.uleb128 0x5
 1636 00ef 49       		.uleb128 0x49
 1637 00f0 13       		.uleb128 0x13
 1638 00f1 02       		.uleb128 0x2
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 52


 1639 00f2 18       		.uleb128 0x18
 1640 00f3 00       		.byte	0
 1641 00f4 00       		.byte	0
 1642 00f5 0F       		.uleb128 0xf
 1643 00f6 34       		.uleb128 0x34
 1644 00f7 00       		.byte	0
 1645 00f8 03       		.uleb128 0x3
 1646 00f9 0E       		.uleb128 0xe
 1647 00fa 3A       		.uleb128 0x3a
 1648 00fb 0B       		.uleb128 0xb
 1649 00fc 3B       		.uleb128 0x3b
 1650 00fd 05       		.uleb128 0x5
 1651 00fe 49       		.uleb128 0x49
 1652 00ff 13       		.uleb128 0x13
 1653 0100 02       		.uleb128 0x2
 1654 0101 17       		.uleb128 0x17
 1655 0102 00       		.byte	0
 1656 0103 00       		.byte	0
 1657 0104 10       		.uleb128 0x10
 1658 0105 05       		.uleb128 0x5
 1659 0106 00       		.byte	0
 1660 0107 03       		.uleb128 0x3
 1661 0108 0E       		.uleb128 0xe
 1662 0109 3A       		.uleb128 0x3a
 1663 010a 0B       		.uleb128 0xb
 1664 010b 3B       		.uleb128 0x3b
 1665 010c 05       		.uleb128 0x5
 1666 010d 49       		.uleb128 0x49
 1667 010e 13       		.uleb128 0x13
 1668 010f 02       		.uleb128 0x2
 1669 0110 17       		.uleb128 0x17
 1670 0111 00       		.byte	0
 1671 0112 00       		.byte	0
 1672 0113 11       		.uleb128 0x11
 1673 0114 0F       		.uleb128 0xf
 1674 0115 00       		.byte	0
 1675 0116 0B       		.uleb128 0xb
 1676 0117 0B       		.uleb128 0xb
 1677 0118 49       		.uleb128 0x49
 1678 0119 13       		.uleb128 0x13
 1679 011a 00       		.byte	0
 1680 011b 00       		.byte	0
 1681 011c 12       		.uleb128 0x12
 1682 011d 26       		.uleb128 0x26
 1683 011e 00       		.byte	0
 1684 011f 49       		.uleb128 0x49
 1685 0120 13       		.uleb128 0x13
 1686 0121 00       		.byte	0
 1687 0122 00       		.byte	0
 1688 0123 13       		.uleb128 0x13
 1689 0124 34       		.uleb128 0x34
 1690 0125 00       		.byte	0
 1691 0126 03       		.uleb128 0x3
 1692 0127 0E       		.uleb128 0xe
 1693 0128 3A       		.uleb128 0x3a
 1694 0129 0B       		.uleb128 0xb
 1695 012a 3B       		.uleb128 0x3b
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 53


 1696 012b 0B       		.uleb128 0xb
 1697 012c 49       		.uleb128 0x49
 1698 012d 13       		.uleb128 0x13
 1699 012e 3F       		.uleb128 0x3f
 1700 012f 19       		.uleb128 0x19
 1701 0130 02       		.uleb128 0x2
 1702 0131 18       		.uleb128 0x18
 1703 0132 00       		.byte	0
 1704 0133 00       		.byte	0
 1705 0134 14       		.uleb128 0x14
 1706 0135 2E       		.uleb128 0x2e
 1707 0136 00       		.byte	0
 1708 0137 3F       		.uleb128 0x3f
 1709 0138 19       		.uleb128 0x19
 1710 0139 3C       		.uleb128 0x3c
 1711 013a 19       		.uleb128 0x19
 1712 013b 6E       		.uleb128 0x6e
 1713 013c 0E       		.uleb128 0xe
 1714 013d 03       		.uleb128 0x3
 1715 013e 0E       		.uleb128 0xe
 1716 013f 3A       		.uleb128 0x3a
 1717 0140 0B       		.uleb128 0xb
 1718 0141 3B       		.uleb128 0x3b
 1719 0142 0B       		.uleb128 0xb
 1720 0143 00       		.byte	0
 1721 0144 00       		.byte	0
 1722 0145 00       		.byte	0
 1723              		.section	.debug_loc,"",%progbits
 1724              	.Ldebug_loc0:
 1725              	.LLST0:
 1726 0000 06000000 		.4byte	.LVL0
 1727 0004 2B000000 		.4byte	.LVL1-1
 1728 0008 0100     		.2byte	0x1
 1729 000a 50       		.byte	0x50
 1730 000b 00000000 		.4byte	0
 1731 000f 00000000 		.4byte	0
 1732              	.LLST1:
 1733 0013 06000000 		.4byte	.LVL2
 1734 0017 1B000000 		.4byte	.LVL3-1
 1735 001b 0100     		.2byte	0x1
 1736 001d 50       		.byte	0x50
 1737 001e 00000000 		.4byte	0
 1738 0022 00000000 		.4byte	0
 1739              	.LLST2:
 1740 0026 06000000 		.4byte	.LVL12
 1741 002a 0E000000 		.4byte	.LVL13
 1742 002e 0100     		.2byte	0x1
 1743 0030 53       		.byte	0x53
 1744 0031 12000000 		.4byte	.LVL14
 1745 0035 16000000 		.4byte	.LVL15
 1746 0039 0100     		.2byte	0x1
 1747 003b 53       		.byte	0x53
 1748 003c 18000000 		.4byte	.LVL16
 1749 0040 20000000 		.4byte	.LFE17
 1750 0044 0100     		.2byte	0x1
 1751 0046 50       		.byte	0x50
 1752 0047 00000000 		.4byte	0
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 54


 1753 004b 00000000 		.4byte	0
 1754              	.LLST3:
 1755 004f 06000000 		.4byte	.LVL17
 1756 0053 1D000000 		.4byte	.LVL18-1
 1757 0057 0100     		.2byte	0x1
 1758 0059 50       		.byte	0x50
 1759 005a 00000000 		.4byte	0
 1760 005e 00000000 		.4byte	0
 1761              	.LLST4:
 1762 0062 00000000 		.4byte	.LVL19
 1763 0066 0A000000 		.4byte	.LVL21
 1764 006a 0100     		.2byte	0x1
 1765 006c 50       		.byte	0x50
 1766 006d 0A000000 		.4byte	.LVL21
 1767 0071 1C000000 		.4byte	.LVL29
 1768 0075 0100     		.2byte	0x1
 1769 0077 56       		.byte	0x56
 1770 0078 1C000000 		.4byte	.LVL29
 1771 007c 1E000000 		.4byte	.LFE20
 1772 0080 0400     		.2byte	0x4
 1773 0082 F3       		.byte	0xf3
 1774 0083 01       		.uleb128 0x1
 1775 0084 50       		.byte	0x50
 1776 0085 9F       		.byte	0x9f
 1777 0086 00000000 		.4byte	0
 1778 008a 00000000 		.4byte	0
 1779              	.LLST5:
 1780 008e 00000000 		.4byte	.LVL19
 1781 0092 0A000000 		.4byte	.LVL21
 1782 0096 0100     		.2byte	0x1
 1783 0098 51       		.byte	0x51
 1784 0099 0A000000 		.4byte	.LVL21
 1785 009d 16000000 		.4byte	.LVL25
 1786 00a1 0100     		.2byte	0x1
 1787 00a3 54       		.byte	0x54
 1788 00a4 18000000 		.4byte	.LVL26
 1789 00a8 1C000000 		.4byte	.LVL27
 1790 00ac 0100     		.2byte	0x1
 1791 00ae 54       		.byte	0x54
 1792 00af 00000000 		.4byte	0
 1793 00b3 00000000 		.4byte	0
 1794              	.LLST6:
 1795 00b7 06000000 		.4byte	.LVL20
 1796 00bb 0A000000 		.4byte	.LVL21
 1797 00bf 0200     		.2byte	0x2
 1798 00c1 30       		.byte	0x30
 1799 00c2 9F       		.byte	0x9f
 1800 00c3 0A000000 		.4byte	.LVL21
 1801 00c7 12000000 		.4byte	.LVL23
 1802 00cb 0100     		.2byte	0x1
 1803 00cd 55       		.byte	0x55
 1804 00ce 14000000 		.4byte	.LVL24
 1805 00d2 1C000000 		.4byte	.LVL28
 1806 00d6 0100     		.2byte	0x1
 1807 00d8 55       		.byte	0x55
 1808 00d9 00000000 		.4byte	0
 1809 00dd 00000000 		.4byte	0
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 55


 1810              	.LLST7:
 1811 00e1 14000000 		.4byte	.LVL30
 1812 00e5 2B000000 		.4byte	.LVL31-1
 1813 00e9 0100     		.2byte	0x1
 1814 00eb 50       		.byte	0x50
 1815 00ec 00000000 		.4byte	0
 1816 00f0 00000000 		.4byte	0
 1817              		.section	.debug_aranges,"",%progbits
 1818 0000 DC000000 		.4byte	0xdc
 1819 0004 0200     		.2byte	0x2
 1820 0006 00000000 		.4byte	.Ldebug_info0
 1821 000a 04       		.byte	0x4
 1822 000b 00       		.byte	0
 1823 000c 0000     		.2byte	0
 1824 000e 0000     		.2byte	0
 1825 0010 00000000 		.4byte	.LFB2
 1826 0014 3C000000 		.4byte	.LFE2-.LFB2
 1827 0018 00000000 		.4byte	.LFB4
 1828 001c 28000000 		.4byte	.LFE4-.LFB4
 1829 0020 00000000 		.4byte	.LFB5
 1830 0024 02000000 		.4byte	.LFE5-.LFB5
 1831 0028 00000000 		.4byte	.LFB6
 1832 002c 02000000 		.4byte	.LFE6-.LFB6
 1833 0030 00000000 		.4byte	.LFB7
 1834 0034 02000000 		.4byte	.LFE7-.LFB7
 1835 0038 00000000 		.4byte	.LFB8
 1836 003c 02000000 		.4byte	.LFE8-.LFB8
 1837 0040 00000000 		.4byte	.LFB9
 1838 0044 0C000000 		.4byte	.LFE9-.LFB9
 1839 0048 00000000 		.4byte	.LFB10
 1840 004c 0C000000 		.4byte	.LFE10-.LFB10
 1841 0050 00000000 		.4byte	.LFB11
 1842 0054 0C000000 		.4byte	.LFE11-.LFB11
 1843 0058 00000000 		.4byte	.LFB12
 1844 005c 0C000000 		.4byte	.LFE12-.LFB12
 1845 0060 00000000 		.4byte	.LFB13
 1846 0064 18000000 		.4byte	.LFE13-.LFB13
 1847 0068 00000000 		.4byte	.LFB14
 1848 006c 0C000000 		.4byte	.LFE14-.LFB14
 1849 0070 00000000 		.4byte	.LFB15
 1850 0074 0C000000 		.4byte	.LFE15-.LFB15
 1851 0078 00000000 		.4byte	.LFB16
 1852 007c 14000000 		.4byte	.LFE16-.LFB16
 1853 0080 00000000 		.4byte	.LFB17
 1854 0084 20000000 		.4byte	.LFE17-.LFB17
 1855 0088 00000000 		.4byte	.LFB18
 1856 008c 18000000 		.4byte	.LFE18-.LFB18
 1857 0090 00000000 		.4byte	.LFB19
 1858 0094 24000000 		.4byte	.LFE19-.LFB19
 1859 0098 00000000 		.4byte	.LFB20
 1860 009c 1E000000 		.4byte	.LFE20-.LFB20
 1861 00a0 00000000 		.4byte	.LFB21
 1862 00a4 3C000000 		.4byte	.LFE21-.LFB21
 1863 00a8 00000000 		.4byte	.LFB1
 1864 00ac 2C000000 		.4byte	.LFE1-.LFB1
 1865 00b0 00000000 		.4byte	.LFB3
 1866 00b4 20000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 56


 1867 00b8 00000000 		.4byte	.LFB22
 1868 00bc 02000000 		.4byte	.LFE22-.LFB22
 1869 00c0 00000000 		.4byte	.LFB23
 1870 00c4 02000000 		.4byte	.LFE23-.LFB23
 1871 00c8 00000000 		.4byte	.LFB24
 1872 00cc 14000000 		.4byte	.LFE24-.LFB24
 1873 00d0 00000000 		.4byte	.LFB25
 1874 00d4 18000000 		.4byte	.LFE25-.LFB25
 1875 00d8 00000000 		.4byte	0
 1876 00dc 00000000 		.4byte	0
 1877              		.section	.debug_ranges,"",%progbits
 1878              	.Ldebug_ranges0:
 1879 0000 00000000 		.4byte	.LFB2
 1880 0004 3C000000 		.4byte	.LFE2
 1881 0008 00000000 		.4byte	.LFB4
 1882 000c 28000000 		.4byte	.LFE4
 1883 0010 00000000 		.4byte	.LFB5
 1884 0014 02000000 		.4byte	.LFE5
 1885 0018 00000000 		.4byte	.LFB6
 1886 001c 02000000 		.4byte	.LFE6
 1887 0020 00000000 		.4byte	.LFB7
 1888 0024 02000000 		.4byte	.LFE7
 1889 0028 00000000 		.4byte	.LFB8
 1890 002c 02000000 		.4byte	.LFE8
 1891 0030 00000000 		.4byte	.LFB9
 1892 0034 0C000000 		.4byte	.LFE9
 1893 0038 00000000 		.4byte	.LFB10
 1894 003c 0C000000 		.4byte	.LFE10
 1895 0040 00000000 		.4byte	.LFB11
 1896 0044 0C000000 		.4byte	.LFE11
 1897 0048 00000000 		.4byte	.LFB12
 1898 004c 0C000000 		.4byte	.LFE12
 1899 0050 00000000 		.4byte	.LFB13
 1900 0054 18000000 		.4byte	.LFE13
 1901 0058 00000000 		.4byte	.LFB14
 1902 005c 0C000000 		.4byte	.LFE14
 1903 0060 00000000 		.4byte	.LFB15
 1904 0064 0C000000 		.4byte	.LFE15
 1905 0068 00000000 		.4byte	.LFB16
 1906 006c 14000000 		.4byte	.LFE16
 1907 0070 00000000 		.4byte	.LFB17
 1908 0074 20000000 		.4byte	.LFE17
 1909 0078 00000000 		.4byte	.LFB18
 1910 007c 18000000 		.4byte	.LFE18
 1911 0080 00000000 		.4byte	.LFB19
 1912 0084 24000000 		.4byte	.LFE19
 1913 0088 00000000 		.4byte	.LFB20
 1914 008c 1E000000 		.4byte	.LFE20
 1915 0090 00000000 		.4byte	.LFB21
 1916 0094 3C000000 		.4byte	.LFE21
 1917 0098 00000000 		.4byte	.LFB1
 1918 009c 2C000000 		.4byte	.LFE1
 1919 00a0 00000000 		.4byte	.LFB3
 1920 00a4 20000000 		.4byte	.LFE3
 1921 00a8 00000000 		.4byte	.LFB22
 1922 00ac 02000000 		.4byte	.LFE22
 1923 00b0 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 57


 1924 00b4 02000000 		.4byte	.LFE23
 1925 00b8 00000000 		.4byte	.LFB24
 1926 00bc 14000000 		.4byte	.LFE24
 1927 00c0 00000000 		.4byte	.LFB25
 1928 00c4 18000000 		.4byte	.LFE25
 1929 00c8 00000000 		.4byte	0
 1930 00cc 00000000 		.4byte	0
 1931              		.section	.debug_line,"",%progbits
 1932              	.Ldebug_line0:
 1933 0000 5F020000 		.section	.debug_str,"MS",%progbits,1
 1933      02005100 
 1933      00000201 
 1933      FB0E0D00 
 1933      01010101 
 1934              	.LASF6:
 1935 0000 6C6F6E67 		.ascii	"long long int\000"
 1935      206C6F6E 
 1935      6720696E 
 1935      7400
 1936              	.LASF57:
 1937 000e 47656E65 		.ascii	"Generated_Source\\PSoC4\\SPIS_HOST.c\000"
 1937      72617465 
 1937      645F536F 
 1937      75726365 
 1937      5C50536F 
 1938              	.LASF23:
 1939 0031 53504953 		.ascii	"SPIS_HOST_SetTxInterruptMode\000"
 1939      5F484F53 
 1939      545F5365 
 1939      74547849 
 1939      6E746572 
 1940              	.LASF24:
 1941 004e 53504953 		.ascii	"SPIS_HOST_SetRxInterruptMode\000"
 1941      5F484F53 
 1941      545F5365 
 1941      74527849 
 1941      6E746572 
 1942              	.LASF48:
 1943 006b 53504953 		.ascii	"SPIS_HOST_DisableInt\000"
 1943      5F484F53 
 1943      545F4469 
 1943      7361626C 
 1943      65496E74 
 1944              	.LASF30:
 1945 0080 74784461 		.ascii	"txData\000"
 1945      746100
 1946              	.LASF4:
 1947 0087 6C6F6E67 		.ascii	"long int\000"
 1947      20696E74 
 1947      00
 1948              	.LASF58:
 1949 0090 5C5C4D61 		.ascii	"\\\\Mac\\Data\\VScode\\GIT\\MacPro_KickStart\\PSoC4"
 1949      635C4461 
 1949      74615C56 
 1949      53636F64 
 1949      655C4749 
 1950 00bc 3230304C 		.ascii	"200L.cydsn\000"
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 58


 1950      2E637964 
 1950      736E00
 1951              	.LASF31:
 1952 00c7 53504953 		.ascii	"SPIS_HOST_WriteTxDataZero\000"
 1952      5F484F53 
 1952      545F5772 
 1952      69746554 
 1952      78446174 
 1953              	.LASF37:
 1954 00e1 53504953 		.ascii	"SPIS_HOST_GetTxBufferSize\000"
 1954      5F484F53 
 1954      545F4765 
 1954      74547842 
 1954      75666665 
 1955              	.LASF20:
 1956 00fb 53504953 		.ascii	"SPIS_HOST_EnableRxInt\000"
 1956      5F484F53 
 1956      545F456E 
 1956      61626C65 
 1956      5278496E 
 1957              	.LASF50:
 1958 0111 53504953 		.ascii	"SPIS_HOST_ReadStatus\000"
 1958      5F484F53 
 1958      545F5265 
 1958      61645374 
 1958      61747573 
 1959              	.LASF45:
 1960 0126 53504953 		.ascii	"SPIS_HOST_Init\000"
 1960      5F484F53 
 1960      545F496E 
 1960      697400
 1961              	.LASF9:
 1962 0135 666C6F61 		.ascii	"float\000"
 1962      7400
 1963              	.LASF7:
 1964 013b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1964      206C6F6E 
 1964      6720756E 
 1964      7369676E 
 1964      65642069 
 1965              	.LASF38:
 1966 0152 53504953 		.ascii	"SPIS_HOST_ClearRxBuffer\000"
 1966      5F484F53 
 1966      545F436C 
 1966      65617252 
 1966      78427566 
 1967              	.LASF21:
 1968 016a 53504953 		.ascii	"SPIS_HOST_DisableTxInt\000"
 1968      5F484F53 
 1968      545F4469 
 1968      7361626C 
 1968      65547849 
 1969              	.LASF13:
 1970 0181 72656738 		.ascii	"reg8\000"
 1970      00
 1971              	.LASF5:
 1972 0186 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 59


 1972      20756E73 
 1972      69676E65 
 1972      6420696E 
 1972      7400
 1973              	.LASF12:
 1974 0198 75696E74 		.ascii	"uint8\000"
 1974      3800
 1975              	.LASF29:
 1976 019e 53504953 		.ascii	"SPIS_HOST_WriteTxData\000"
 1976      5F484F53 
 1976      545F5772 
 1976      69746554 
 1976      78446174 
 1977              	.LASF44:
 1978 01b4 53504953 		.ascii	"SPIS_HOST_ClearFIFO\000"
 1978      5F484F53 
 1978      545F436C 
 1978      65617246 
 1978      49464F00 
 1979              	.LASF42:
 1980 01c8 62797465 		.ascii	"byteCount\000"
 1980      436F756E 
 1980      7400
 1981              	.LASF18:
 1982 01d2 656E6162 		.ascii	"enableInterrupts\000"
 1982      6C65496E 
 1982      74657272 
 1982      75707473 
 1982      00
 1983              	.LASF33:
 1984 01e3 53504953 		.ascii	"SPIS_HOST_ReadRxData\000"
 1984      5F484F53 
 1984      545F5265 
 1984      61645278 
 1984      44617461 
 1985              	.LASF1:
 1986 01f8 756E7369 		.ascii	"unsigned char\000"
 1986      676E6564 
 1986      20636861 
 1986      7200
 1987              	.LASF10:
 1988 0206 646F7562 		.ascii	"double\000"
 1988      6C6500
 1989              	.LASF25:
 1990 020d 696E7453 		.ascii	"intSrc\000"
 1990      726300
 1991              	.LASF53:
 1992 0214 53504953 		.ascii	"SPIS_HOST_swStatusRx\000"
 1992      5F484F53 
 1992      545F7377 
 1992      53746174 
 1992      75735278 
 1993              	.LASF52:
 1994 0229 53504953 		.ascii	"SPIS_HOST_swStatusTx\000"
 1994      5F484F53 
 1994      545F7377 
 1994      53746174 
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 60


 1994      75735478 
 1995              	.LASF54:
 1996 023e 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1996      74657243 
 1996      72697469 
 1996      63616C53 
 1996      65637469 
 1997              	.LASF8:
 1998 0255 756E7369 		.ascii	"unsigned int\000"
 1998      676E6564 
 1998      20696E74 
 1998      00
 1999              	.LASF35:
 2000 0262 53504953 		.ascii	"SPIS_HOST_GetRxBufferSize\000"
 2000      5F484F53 
 2000      545F4765 
 2000      74527842 
 2000      75666665 
 2001              	.LASF17:
 2002 027c 53504953 		.ascii	"SPIS_HOST_Stop\000"
 2002      5F484F53 
 2002      545F5374 
 2002      6F7000
 2003              	.LASF55:
 2004 028b 43794578 		.ascii	"CyExitCriticalSection\000"
 2004      69744372 
 2004      69746963 
 2004      616C5365 
 2004      6374696F 
 2005              	.LASF28:
 2006 02a1 53504953 		.ascii	"SPIS_HOST_ReadRxStatus\000"
 2006      5F484F53 
 2006      545F5265 
 2006      61645278 
 2006      53746174 
 2007              	.LASF43:
 2008 02b8 62756649 		.ascii	"bufIndex\000"
 2008      6E646578 
 2008      00
 2009              	.LASF40:
 2010 02c1 53504953 		.ascii	"SPIS_HOST_PutArray\000"
 2010      5F484F53 
 2010      545F5075 
 2010      74417272 
 2010      617900
 2011              	.LASF56:
 2012 02d4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2012      43313120 
 2012      352E342E 
 2012      31203230 
 2012      31363036 
 2013 0307 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2013      20726576 
 2013      6973696F 
 2013      6E203233 
 2013      37373135 
 2014 033a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 61


 2014      66756E63 
 2014      74696F6E 
 2014      2D736563 
 2014      74696F6E 
 2015              	.LASF49:
 2016 0362 53504953 		.ascii	"SPIS_HOST_SetInterruptMode\000"
 2016      5F484F53 
 2016      545F5365 
 2016      74496E74 
 2016      65727275 
 2017              	.LASF14:
 2018 037d 6C6F6E67 		.ascii	"long double\000"
 2018      20646F75 
 2018      626C6500 
 2019              	.LASF15:
 2020 0389 73697A65 		.ascii	"sizetype\000"
 2020      74797065 
 2020      00
 2021              	.LASF19:
 2022 0392 53504953 		.ascii	"SPIS_HOST_EnableTxInt\000"
 2022      5F484F53 
 2022      545F456E 
 2022      61626C65 
 2022      5478496E 
 2023              	.LASF32:
 2024 03a8 74784461 		.ascii	"txDataByte\000"
 2024      74614279 
 2024      746500
 2025              	.LASF11:
 2026 03b3 63686172 		.ascii	"char\000"
 2026      00
 2027              	.LASF34:
 2028 03b8 72784461 		.ascii	"rxData\000"
 2028      746100
 2029              	.LASF47:
 2030 03bf 53504953 		.ascii	"SPIS_HOST_EnableInt\000"
 2030      5F484F53 
 2030      545F456E 
 2030      61626C65 
 2030      496E7400 
 2031              	.LASF2:
 2032 03d3 73686F72 		.ascii	"short int\000"
 2032      7420696E 
 2032      7400
 2033              	.LASF16:
 2034 03dd 53504953 		.ascii	"SPIS_HOST_Enable\000"
 2034      5F484F53 
 2034      545F456E 
 2034      61626C65 
 2034      00
 2035              	.LASF41:
 2036 03ee 62756666 		.ascii	"buffer\000"
 2036      657200
 2037              	.LASF22:
 2038 03f5 53504953 		.ascii	"SPIS_HOST_DisableRxInt\000"
 2038      5F484F53 
 2038      545F4469 
ARM GAS  C:\Users\rolf\AppData\Local\Temp\cc4cRzYy.s 			page 62


 2038      7361626C 
 2038      65527849 
 2039              	.LASF46:
 2040 040c 53504953 		.ascii	"SPIS_HOST_Start\000"
 2040      5F484F53 
 2040      545F5374 
 2040      61727400 
 2041              	.LASF51:
 2042 041c 53504953 		.ascii	"SPIS_HOST_initVar\000"
 2042      5F484F53 
 2042      545F696E 
 2042      69745661 
 2042      7200
 2043              	.LASF26:
 2044 042e 746D7053 		.ascii	"tmpStatus\000"
 2044      74617475 
 2044      7300
 2045              	.LASF27:
 2046 0438 53504953 		.ascii	"SPIS_HOST_ReadTxStatus\000"
 2046      5F484F53 
 2046      545F5265 
 2046      61645478 
 2046      53746174 
 2047              	.LASF0:
 2048 044f 7369676E 		.ascii	"signed char\000"
 2048      65642063 
 2048      68617200 
 2049              	.LASF3:
 2050 045b 73686F72 		.ascii	"short unsigned int\000"
 2050      7420756E 
 2050      7369676E 
 2050      65642069 
 2050      6E7400
 2051              	.LASF36:
 2052 046e 73697A65 		.ascii	"size\000"
 2052      00
 2053              	.LASF39:
 2054 0473 53504953 		.ascii	"SPIS_HOST_ClearTxBuffer\000"
 2054      5F484F53 
 2054      545F436C 
 2054      65617254 
 2054      78427566 
 2055              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
